// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: Message/Message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type IncrementOperationV1 int32

const (
	IncrementOperationV1_Unknown       IncrementOperationV1 = 0
	IncrementOperationV1_Create        IncrementOperationV1 = 1
	IncrementOperationV1_Delete        IncrementOperationV1 = 2
	IncrementOperationV1_Update        IncrementOperationV1 = 3
	IncrementOperationV1_UpdateNParent IncrementOperationV1 = 4
	IncrementOperationV1_ClearAll      IncrementOperationV1 = 5
	IncrementOperationV1_OverwriteAll  IncrementOperationV1 = 6
)

// Enum value maps for IncrementOperationV1.
var (
	IncrementOperationV1_name = map[int32]string{
		0: "Unknown",
		1: "Create",
		2: "Delete",
		3: "Update",
		4: "UpdateNParent",
		5: "ClearAll",
		6: "OverwriteAll",
	}
	IncrementOperationV1_value = map[string]int32{
		"Unknown":       0,
		"Create":        1,
		"Delete":        2,
		"Update":        3,
		"UpdateNParent": 4,
		"ClearAll":      5,
		"OverwriteAll":  6,
	}
)

func (x IncrementOperationV1) Enum() *IncrementOperationV1 {
	p := new(IncrementOperationV1)
	*p = x
	return p
}

func (x IncrementOperationV1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IncrementOperationV1) Descriptor() protoreflect.EnumDescriptor {
	return file_Message_Message_proto_enumTypes[0].Descriptor()
}

func (IncrementOperationV1) Type() protoreflect.EnumType {
	return &file_Message_Message_proto_enumTypes[0]
}

func (x IncrementOperationV1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IncrementOperationV1.Descriptor instead.
func (IncrementOperationV1) EnumDescriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{0}
}

type MetaInfoBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XId                    string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	DataAccessModelVersion string `protobuf:"bytes,2,opt,name=DataAccessModelVersion,proto3" json:"DataAccessModelVersion,omitempty"`
	Uuid                   string `protobuf:"bytes,3,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
}

func (x *MetaInfoBase) Reset() {
	*x = MetaInfoBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaInfoBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaInfoBase) ProtoMessage() {}

func (x *MetaInfoBase) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaInfoBase.ProtoReflect.Descriptor instead.
func (*MetaInfoBase) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{0}
}

func (x *MetaInfoBase) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *MetaInfoBase) GetDataAccessModelVersion() string {
	if x != nil {
		return x.DataAccessModelVersion
	}
	return ""
}

func (x *MetaInfoBase) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type BrainTellServerMysqlDBCompatibleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	NickName  string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Score     int32  `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	AppKey    string `protobuf:"bytes,4,opt,name=AppKey,proto3" json:"AppKey,omitempty"`
	IsDeleted int32  `protobuf:"varint,5,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *BrainTellServerMysqlDBCompatibleData) Reset() {
	*x = BrainTellServerMysqlDBCompatibleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrainTellServerMysqlDBCompatibleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrainTellServerMysqlDBCompatibleData) ProtoMessage() {}

func (x *BrainTellServerMysqlDBCompatibleData) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrainTellServerMysqlDBCompatibleData.ProtoReflect.Descriptor instead.
func (*BrainTellServerMysqlDBCompatibleData) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{1}
}

func (x *BrainTellServerMysqlDBCompatibleData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BrainTellServerMysqlDBCompatibleData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *BrainTellServerMysqlDBCompatibleData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BrainTellServerMysqlDBCompatibleData) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *BrainTellServerMysqlDBCompatibleData) GetIsDeleted() int32 {
	if x != nil {
		return x.IsDeleted
	}
	return 0
}

type UserMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *MetaInfoBase                         `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Name                string                                `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Password            string                                `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Description         string                                `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	CreateTime          *timestamppb.Timestamp                `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	HeadPhotoBinData    []byte                                `protobuf:"bytes,6,opt,name=HeadPhotoBinData,proto3" json:"HeadPhotoBinData,omitempty"`
	PermissionGroupUuid string                                `protobuf:"bytes,7,opt,name=PermissionGroupUuid,proto3" json:"PermissionGroupUuid,omitempty"`
	UserId              int32                                 `protobuf:"varint,8,opt,name=UserId,proto3" json:"UserId,omitempty"`
	CompatibleData      *BrainTellServerMysqlDBCompatibleData `protobuf:"bytes,9,opt,name=CompatibleData,proto3" json:"CompatibleData,omitempty"`
}

func (x *UserMetaInfoV1) Reset() {
	*x = UserMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetaInfoV1) ProtoMessage() {}

func (x *UserMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetaInfoV1.ProtoReflect.Descriptor instead.
func (*UserMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{2}
}

func (x *UserMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UserMetaInfoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserMetaInfoV1) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserMetaInfoV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserMetaInfoV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *UserMetaInfoV1) GetHeadPhotoBinData() []byte {
	if x != nil {
		return x.HeadPhotoBinData
	}
	return nil
}

func (x *UserMetaInfoV1) GetPermissionGroupUuid() string {
	if x != nil {
		return x.PermissionGroupUuid
	}
	return ""
}

func (x *UserMetaInfoV1) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserMetaInfoV1) GetCompatibleData() *BrainTellServerMysqlDBCompatibleData {
	if x != nil {
		return x.CompatibleData
	}
	return nil
}

type PermissionGroupAceV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllPermissionGroupManagementPermission bool `protobuf:"varint,1,opt,name=AllPermissionGroupManagementPermission,proto3" json:"AllPermissionGroupManagementPermission,omitempty"`
	AllUserManagementPermission            bool `protobuf:"varint,2,opt,name=AllUserManagementPermission,proto3" json:"AllUserManagementPermission,omitempty"`
	AllProjectManagementPermission         bool `protobuf:"varint,3,opt,name=AllProjectManagementPermission,proto3" json:"AllProjectManagementPermission,omitempty"`
	AllSwcManagementPermission             bool `protobuf:"varint,4,opt,name=AllSwcManagementPermission,proto3" json:"AllSwcManagementPermission,omitempty"`
	AllDailyStatisticsManagementPermission bool `protobuf:"varint,5,opt,name=AllDailyStatisticsManagementPermission,proto3" json:"AllDailyStatisticsManagementPermission,omitempty"`
	CreateProjectPermission                bool `protobuf:"varint,6,opt,name=CreateProjectPermission,proto3" json:"CreateProjectPermission,omitempty"`
	CreateSwcPermission                    bool `protobuf:"varint,7,opt,name=CreateSwcPermission,proto3" json:"CreateSwcPermission,omitempty"`
}

func (x *PermissionGroupAceV1) Reset() {
	*x = PermissionGroupAceV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionGroupAceV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGroupAceV1) ProtoMessage() {}

func (x *PermissionGroupAceV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGroupAceV1.ProtoReflect.Descriptor instead.
func (*PermissionGroupAceV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{3}
}

func (x *PermissionGroupAceV1) GetAllPermissionGroupManagementPermission() bool {
	if x != nil {
		return x.AllPermissionGroupManagementPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetAllUserManagementPermission() bool {
	if x != nil {
		return x.AllUserManagementPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetAllProjectManagementPermission() bool {
	if x != nil {
		return x.AllProjectManagementPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetAllSwcManagementPermission() bool {
	if x != nil {
		return x.AllSwcManagementPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetAllDailyStatisticsManagementPermission() bool {
	if x != nil {
		return x.AllDailyStatisticsManagementPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetCreateProjectPermission() bool {
	if x != nil {
		return x.CreateProjectPermission
	}
	return false
}

func (x *PermissionGroupAceV1) GetCreateSwcPermission() bool {
	if x != nil {
		return x.CreateSwcPermission
	}
	return false
}

type PermissionGroupAclV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionGroupUuid string                `protobuf:"bytes,1,opt,name=PermissionGroupUuid,proto3" json:"PermissionGroupUuid,omitempty"`
	PermissionGroupAce  *PermissionGroupAceV1 `protobuf:"bytes,2,opt,name=PermissionGroupAce,proto3" json:"PermissionGroupAce,omitempty"`
}

func (x *PermissionGroupAclV1) Reset() {
	*x = PermissionGroupAclV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionGroupAclV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGroupAclV1) ProtoMessage() {}

func (x *PermissionGroupAclV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGroupAclV1.ProtoReflect.Descriptor instead.
func (*PermissionGroupAclV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{4}
}

func (x *PermissionGroupAclV1) GetPermissionGroupUuid() string {
	if x != nil {
		return x.PermissionGroupUuid
	}
	return ""
}

func (x *PermissionGroupAclV1) GetPermissionGroupAce() *PermissionGroupAceV1 {
	if x != nil {
		return x.PermissionGroupAce
	}
	return nil
}

type PermissionAceV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WritePermissionModifyProject         bool `protobuf:"varint,1,opt,name=WritePermissionModifyProject,proto3" json:"WritePermissionModifyProject,omitempty"`
	WritePermissionDeleteProject         bool `protobuf:"varint,2,opt,name=WritePermissionDeleteProject,proto3" json:"WritePermissionDeleteProject,omitempty"`
	ReadPerimissionQueryProject          bool `protobuf:"varint,3,opt,name=ReadPerimissionQueryProject,proto3" json:"ReadPerimissionQueryProject,omitempty"`
	WritePermissionUpdateSwc             bool `protobuf:"varint,4,opt,name=WritePermissionUpdateSwc,proto3" json:"WritePermissionUpdateSwc,omitempty"`
	WritePermissionDeleteSwc             bool `protobuf:"varint,5,opt,name=WritePermissionDeleteSwc,proto3" json:"WritePermissionDeleteSwc,omitempty"`
	ReadPerimissionQuerySwc              bool `protobuf:"varint,6,opt,name=ReadPerimissionQuerySwc,proto3" json:"ReadPerimissionQuerySwc,omitempty"`
	WritePermissionAddSwcData            bool `protobuf:"varint,7,opt,name=WritePermissionAddSwcData,proto3" json:"WritePermissionAddSwcData,omitempty"`
	WritePermissionModifySwcData         bool `protobuf:"varint,8,opt,name=WritePermissionModifySwcData,proto3" json:"WritePermissionModifySwcData,omitempty"`
	WritePermissionDeleteSwcData         bool `protobuf:"varint,9,opt,name=WritePermissionDeleteSwcData,proto3" json:"WritePermissionDeleteSwcData,omitempty"`
	ReadPerimissionQuerySwcData          bool `protobuf:"varint,10,opt,name=ReadPerimissionQuerySwcData,proto3" json:"ReadPerimissionQuerySwcData,omitempty"`
	CreateSnapshotAndIncrementPermission bool `protobuf:"varint,11,opt,name=CreateSnapshotAndIncrementPermission,proto3" json:"CreateSnapshotAndIncrementPermission,omitempty"`
	DeleteSnapshotAndIncrementPermission bool `protobuf:"varint,12,opt,name=DeleteSnapshotAndIncrementPermission,proto3" json:"DeleteSnapshotAndIncrementPermission,omitempty"`
	QuerySnapshotAndIncrementPermission  bool `protobuf:"varint,13,opt,name=QuerySnapshotAndIncrementPermission,proto3" json:"QuerySnapshotAndIncrementPermission,omitempty"`
	CreateAnoAttachmentPermission        bool `protobuf:"varint,14,opt,name=CreateAnoAttachmentPermission,proto3" json:"CreateAnoAttachmentPermission,omitempty"`
	DeleteAnoAttachmentPermission        bool `protobuf:"varint,15,opt,name=DeleteAnoAttachmentPermission,proto3" json:"DeleteAnoAttachmentPermission,omitempty"`
	UpdateAnoAttachmentPermission        bool `protobuf:"varint,16,opt,name=UpdateAnoAttachmentPermission,proto3" json:"UpdateAnoAttachmentPermission,omitempty"`
	QueryAnoAttachmentPermission         bool `protobuf:"varint,17,opt,name=QueryAnoAttachmentPermission,proto3" json:"QueryAnoAttachmentPermission,omitempty"`
	CreateApoAttachmentPermission        bool `protobuf:"varint,18,opt,name=CreateApoAttachmentPermission,proto3" json:"CreateApoAttachmentPermission,omitempty"`
	DeleteApoAttachmentPermission        bool `protobuf:"varint,19,opt,name=DeleteApoAttachmentPermission,proto3" json:"DeleteApoAttachmentPermission,omitempty"`
	UpdateApoAttachmentPermission        bool `protobuf:"varint,20,opt,name=UpdateApoAttachmentPermission,proto3" json:"UpdateApoAttachmentPermission,omitempty"`
	QueryApoAttachmentPermission         bool `protobuf:"varint,21,opt,name=QueryApoAttachmentPermission,proto3" json:"QueryApoAttachmentPermission,omitempty"`
	CreateSwcAttachmentPermission        bool `protobuf:"varint,22,opt,name=CreateSwcAttachmentPermission,proto3" json:"CreateSwcAttachmentPermission,omitempty"`
	DeleteSwcAttachmentPermission        bool `protobuf:"varint,23,opt,name=DeleteSwcAttachmentPermission,proto3" json:"DeleteSwcAttachmentPermission,omitempty"`
	UpdateSwcAttachmentPermission        bool `protobuf:"varint,24,opt,name=UpdateSwcAttachmentPermission,proto3" json:"UpdateSwcAttachmentPermission,omitempty"`
	QuerySwcAttachmentPermission         bool `protobuf:"varint,25,opt,name=QuerySwcAttachmentPermission,proto3" json:"QuerySwcAttachmentPermission,omitempty"`
}

func (x *PermissionAceV1) Reset() {
	*x = PermissionAceV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionAceV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionAceV1) ProtoMessage() {}

func (x *PermissionAceV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionAceV1.ProtoReflect.Descriptor instead.
func (*PermissionAceV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{5}
}

func (x *PermissionAceV1) GetWritePermissionModifyProject() bool {
	if x != nil {
		return x.WritePermissionModifyProject
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionDeleteProject() bool {
	if x != nil {
		return x.WritePermissionDeleteProject
	}
	return false
}

func (x *PermissionAceV1) GetReadPerimissionQueryProject() bool {
	if x != nil {
		return x.ReadPerimissionQueryProject
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionUpdateSwc() bool {
	if x != nil {
		return x.WritePermissionUpdateSwc
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionDeleteSwc() bool {
	if x != nil {
		return x.WritePermissionDeleteSwc
	}
	return false
}

func (x *PermissionAceV1) GetReadPerimissionQuerySwc() bool {
	if x != nil {
		return x.ReadPerimissionQuerySwc
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionAddSwcData() bool {
	if x != nil {
		return x.WritePermissionAddSwcData
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionModifySwcData() bool {
	if x != nil {
		return x.WritePermissionModifySwcData
	}
	return false
}

func (x *PermissionAceV1) GetWritePermissionDeleteSwcData() bool {
	if x != nil {
		return x.WritePermissionDeleteSwcData
	}
	return false
}

func (x *PermissionAceV1) GetReadPerimissionQuerySwcData() bool {
	if x != nil {
		return x.ReadPerimissionQuerySwcData
	}
	return false
}

func (x *PermissionAceV1) GetCreateSnapshotAndIncrementPermission() bool {
	if x != nil {
		return x.CreateSnapshotAndIncrementPermission
	}
	return false
}

func (x *PermissionAceV1) GetDeleteSnapshotAndIncrementPermission() bool {
	if x != nil {
		return x.DeleteSnapshotAndIncrementPermission
	}
	return false
}

func (x *PermissionAceV1) GetQuerySnapshotAndIncrementPermission() bool {
	if x != nil {
		return x.QuerySnapshotAndIncrementPermission
	}
	return false
}

func (x *PermissionAceV1) GetCreateAnoAttachmentPermission() bool {
	if x != nil {
		return x.CreateAnoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetDeleteAnoAttachmentPermission() bool {
	if x != nil {
		return x.DeleteAnoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetUpdateAnoAttachmentPermission() bool {
	if x != nil {
		return x.UpdateAnoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetQueryAnoAttachmentPermission() bool {
	if x != nil {
		return x.QueryAnoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetCreateApoAttachmentPermission() bool {
	if x != nil {
		return x.CreateApoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetDeleteApoAttachmentPermission() bool {
	if x != nil {
		return x.DeleteApoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetUpdateApoAttachmentPermission() bool {
	if x != nil {
		return x.UpdateApoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetQueryApoAttachmentPermission() bool {
	if x != nil {
		return x.QueryApoAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetCreateSwcAttachmentPermission() bool {
	if x != nil {
		return x.CreateSwcAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetDeleteSwcAttachmentPermission() bool {
	if x != nil {
		return x.DeleteSwcAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetUpdateSwcAttachmentPermission() bool {
	if x != nil {
		return x.UpdateSwcAttachmentPermission
	}
	return false
}

func (x *PermissionAceV1) GetQuerySwcAttachmentPermission() bool {
	if x != nil {
		return x.QuerySwcAttachmentPermission
	}
	return false
}

type UserPermissionAclV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid string           `protobuf:"bytes,1,opt,name=UserUuid,proto3" json:"UserUuid,omitempty"`
	Ace      *PermissionAceV1 `protobuf:"bytes,2,opt,name=Ace,proto3" json:"Ace,omitempty"`
}

func (x *UserPermissionAclV1) Reset() {
	*x = UserPermissionAclV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionAclV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionAclV1) ProtoMessage() {}

func (x *UserPermissionAclV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionAclV1.ProtoReflect.Descriptor instead.
func (*UserPermissionAclV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{6}
}

func (x *UserPermissionAclV1) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UserPermissionAclV1) GetAce() *PermissionAceV1 {
	if x != nil {
		return x.Ace
	}
	return nil
}

type GroupPermissionAclV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupUuid string           `protobuf:"bytes,1,opt,name=GroupUuid,proto3" json:"GroupUuid,omitempty"`
	Ace       *PermissionAceV1 `protobuf:"bytes,2,opt,name=Ace,proto3" json:"Ace,omitempty"`
}

func (x *GroupPermissionAclV1) Reset() {
	*x = GroupPermissionAclV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPermissionAclV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPermissionAclV1) ProtoMessage() {}

func (x *GroupPermissionAclV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPermissionAclV1.ProtoReflect.Descriptor instead.
func (*GroupPermissionAclV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{7}
}

func (x *GroupPermissionAclV1) GetGroupUuid() string {
	if x != nil {
		return x.GroupUuid
	}
	return ""
}

func (x *GroupPermissionAclV1) GetAce() *PermissionAceV1 {
	if x != nil {
		return x.Ace
	}
	return nil
}

type PermissionMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  *UserPermissionAclV1    `protobuf:"bytes,1,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Users  []*UserPermissionAclV1  `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	Groups []*GroupPermissionAclV1 `protobuf:"bytes,3,rep,name=Groups,proto3" json:"Groups,omitempty"`
}

func (x *PermissionMetaInfoV1) Reset() {
	*x = PermissionMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionMetaInfoV1) ProtoMessage() {}

func (x *PermissionMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionMetaInfoV1.ProtoReflect.Descriptor instead.
func (*PermissionMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{8}
}

func (x *PermissionMetaInfoV1) GetOwner() *UserPermissionAclV1 {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *PermissionMetaInfoV1) GetUsers() []*UserPermissionAclV1 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *PermissionMetaInfoV1) GetGroups() []*GroupPermissionAclV1 {
	if x != nil {
		return x.Groups
	}
	return nil
}

type PermissionGroupMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *MetaInfoBase         `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Name        string                `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string                `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Ace         *PermissionGroupAceV1 `protobuf:"bytes,4,opt,name=Ace,proto3" json:"Ace,omitempty"`
}

func (x *PermissionGroupMetaInfoV1) Reset() {
	*x = PermissionGroupMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionGroupMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGroupMetaInfoV1) ProtoMessage() {}

func (x *PermissionGroupMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGroupMetaInfoV1.ProtoReflect.Descriptor instead.
func (*PermissionGroupMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{9}
}

func (x *PermissionGroupMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PermissionGroupMetaInfoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionGroupMetaInfoV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PermissionGroupMetaInfoV1) GetAce() *PermissionGroupAceV1 {
	if x != nil {
		return x.Ace
	}
	return nil
}

type ProjectMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base             *MetaInfoBase          `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Creator          string                 `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreateTime       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	LastModifiedTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=LastModifiedTime,proto3" json:"LastModifiedTime,omitempty"`
	SwcList          []string               `protobuf:"bytes,7,rep,name=SwcList,proto3" json:"SwcList,omitempty"`
	WorkMode         string                 `protobuf:"bytes,8,opt,name=WorkMode,proto3" json:"WorkMode,omitempty"`
	Permission       *PermissionMetaInfoV1  `protobuf:"bytes,9,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *ProjectMetaInfoV1) Reset() {
	*x = ProjectMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMetaInfoV1) ProtoMessage() {}

func (x *ProjectMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMetaInfoV1.ProtoReflect.Descriptor instead.
func (*ProjectMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ProjectMetaInfoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMetaInfoV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMetaInfoV1) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ProjectMetaInfoV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ProjectMetaInfoV1) GetLastModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedTime
	}
	return nil
}

func (x *ProjectMetaInfoV1) GetSwcList() []string {
	if x != nil {
		return x.SwcList
	}
	return nil
}

func (x *ProjectMetaInfoV1) GetWorkMode() string {
	if x != nil {
		return x.WorkMode
	}
	return ""
}

func (x *ProjectMetaInfoV1) GetPermission() *PermissionMetaInfoV1 {
	if x != nil {
		return x.Permission
	}
	return nil
}

type SwcSnapshotMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                      *MetaInfoBase          `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	SwcSnapshotCollectionName string                 `protobuf:"bytes,2,opt,name=SwcSnapshotCollectionName,proto3" json:"SwcSnapshotCollectionName,omitempty"`
	CreateTime                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Creator                   string                 `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
}

func (x *SwcSnapshotMetaInfoV1) Reset() {
	*x = SwcSnapshotMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcSnapshotMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcSnapshotMetaInfoV1) ProtoMessage() {}

func (x *SwcSnapshotMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcSnapshotMetaInfoV1.ProtoReflect.Descriptor instead.
func (*SwcSnapshotMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{11}
}

func (x *SwcSnapshotMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcSnapshotMetaInfoV1) GetSwcSnapshotCollectionName() string {
	if x != nil {
		return x.SwcSnapshotCollectionName
	}
	return ""
}

func (x *SwcSnapshotMetaInfoV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SwcSnapshotMetaInfoV1) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type SwcIncrementOperationMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                             *MetaInfoBase          `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	IncrementOperationCollectionName string                 `protobuf:"bytes,2,opt,name=IncrementOperationCollectionName,proto3" json:"IncrementOperationCollectionName,omitempty"`
	StartSnapshot                    string                 `protobuf:"bytes,3,opt,name=StartSnapshot,proto3" json:"StartSnapshot,omitempty"`
	CreateTime                       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *SwcIncrementOperationMetaInfoV1) Reset() {
	*x = SwcIncrementOperationMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcIncrementOperationMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcIncrementOperationMetaInfoV1) ProtoMessage() {}

func (x *SwcIncrementOperationMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcIncrementOperationMetaInfoV1.ProtoReflect.Descriptor instead.
func (*SwcIncrementOperationMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{12}
}

func (x *SwcIncrementOperationMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcIncrementOperationMetaInfoV1) GetIncrementOperationCollectionName() string {
	if x != nil {
		return x.IncrementOperationCollectionName
	}
	return ""
}

func (x *SwcIncrementOperationMetaInfoV1) GetStartSnapshot() string {
	if x != nil {
		return x.StartSnapshot
	}
	return ""
}

func (x *SwcIncrementOperationMetaInfoV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type NodeNParentV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeUuid string `protobuf:"bytes,1,opt,name=NodeUuid,proto3" json:"NodeUuid,omitempty"`
	N        int32  `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	Parent   int32  `protobuf:"varint,3,opt,name=Parent,proto3" json:"Parent,omitempty"`
}

func (x *NodeNParentV1) Reset() {
	*x = NodeNParentV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeNParentV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeNParentV1) ProtoMessage() {}

func (x *NodeNParentV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeNParentV1.ProtoReflect.Descriptor instead.
func (*NodeNParentV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{13}
}

func (x *NodeNParentV1) GetNodeUuid() string {
	if x != nil {
		return x.NodeUuid
	}
	return ""
}

func (x *NodeNParentV1) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *NodeNParentV1) GetParent() int32 {
	if x != nil {
		return x.Parent
	}
	return 0
}

type SwcIncrementOperationV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base               *MetaInfoBase          `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	CreateTime         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	IncrementOperation IncrementOperationV1   `protobuf:"varint,3,opt,name=IncrementOperation,proto3,enum=proto.IncrementOperationV1" json:"IncrementOperation,omitempty"`
	SwcData            *SwcDataV1             `protobuf:"bytes,4,opt,name=SwcData,proto3" json:"SwcData,omitempty"`
	NodeNParent        []*NodeNParentV1       `protobuf:"bytes,5,rep,name=NodeNParent,proto3" json:"NodeNParent,omitempty"`
}

func (x *SwcIncrementOperationV1) Reset() {
	*x = SwcIncrementOperationV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcIncrementOperationV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcIncrementOperationV1) ProtoMessage() {}

func (x *SwcIncrementOperationV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcIncrementOperationV1.ProtoReflect.Descriptor instead.
func (*SwcIncrementOperationV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{14}
}

func (x *SwcIncrementOperationV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcIncrementOperationV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SwcIncrementOperationV1) GetIncrementOperation() IncrementOperationV1 {
	if x != nil {
		return x.IncrementOperation
	}
	return IncrementOperationV1_Unknown
}

func (x *SwcIncrementOperationV1) GetSwcData() *SwcDataV1 {
	if x != nil {
		return x.SwcData
	}
	return nil
}

func (x *SwcIncrementOperationV1) GetNodeNParent() []*NodeNParentV1 {
	if x != nil {
		return x.NodeNParent
	}
	return nil
}

type SwcIncrementOperationListV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwcIncrementOperation []*SwcIncrementOperationV1 `protobuf:"bytes,1,rep,name=SwcIncrementOperation,proto3" json:"SwcIncrementOperation,omitempty"`
}

func (x *SwcIncrementOperationListV1) Reset() {
	*x = SwcIncrementOperationListV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcIncrementOperationListV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcIncrementOperationListV1) ProtoMessage() {}

func (x *SwcIncrementOperationListV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcIncrementOperationListV1.ProtoReflect.Descriptor instead.
func (*SwcIncrementOperationListV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{15}
}

func (x *SwcIncrementOperationListV1) GetSwcIncrementOperation() []*SwcIncrementOperationV1 {
	if x != nil {
		return x.SwcIncrementOperation
	}
	return nil
}

type SwcAttachmentAnoMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachmentUuid string `protobuf:"bytes,1,opt,name=AttachmentUuid,proto3" json:"AttachmentUuid,omitempty"`
}

func (x *SwcAttachmentAnoMetaInfoV1) Reset() {
	*x = SwcAttachmentAnoMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcAttachmentAnoMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcAttachmentAnoMetaInfoV1) ProtoMessage() {}

func (x *SwcAttachmentAnoMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcAttachmentAnoMetaInfoV1.ProtoReflect.Descriptor instead.
func (*SwcAttachmentAnoMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{16}
}

func (x *SwcAttachmentAnoMetaInfoV1) GetAttachmentUuid() string {
	if x != nil {
		return x.AttachmentUuid
	}
	return ""
}

type SwcAttachmentApoMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachmentUuid string `protobuf:"bytes,1,opt,name=AttachmentUuid,proto3" json:"AttachmentUuid,omitempty"`
}

func (x *SwcAttachmentApoMetaInfoV1) Reset() {
	*x = SwcAttachmentApoMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcAttachmentApoMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcAttachmentApoMetaInfoV1) ProtoMessage() {}

func (x *SwcAttachmentApoMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcAttachmentApoMetaInfoV1.ProtoReflect.Descriptor instead.
func (*SwcAttachmentApoMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{17}
}

func (x *SwcAttachmentApoMetaInfoV1) GetAttachmentUuid() string {
	if x != nil {
		return x.AttachmentUuid
	}
	return ""
}

type SwcMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                                    *MetaInfoBase                      `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Name                                    string                             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description                             string                             `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Creator                                 string                             `protobuf:"bytes,4,opt,name=Creator,proto3" json:"Creator,omitempty"`
	SwcType                                 string                             `protobuf:"bytes,5,opt,name=SwcType,proto3" json:"SwcType,omitempty"`
	CreateTime                              *timestamppb.Timestamp             `protobuf:"bytes,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	LastModifiedTime                        *timestamppb.Timestamp             `protobuf:"bytes,7,opt,name=LastModifiedTime,proto3" json:"LastModifiedTime,omitempty"`
	SwcSnapshotMetaInfoList                 []*SwcSnapshotMetaInfoV1           `protobuf:"bytes,8,rep,name=SwcSnapshotMetaInfoList,proto3" json:"SwcSnapshotMetaInfoList,omitempty"`
	SwcIncrementOperationMetaInfoList       []*SwcIncrementOperationMetaInfoV1 `protobuf:"bytes,9,rep,name=SwcIncrementOperationMetaInfoList,proto3" json:"SwcIncrementOperationMetaInfoList,omitempty"`
	CurrentIncrementOperationCollectionName string                             `protobuf:"bytes,10,opt,name=CurrentIncrementOperationCollectionName,proto3" json:"CurrentIncrementOperationCollectionName,omitempty"`
	SwcAttachmentAnoMetaInfo                *SwcAttachmentAnoMetaInfoV1        `protobuf:"bytes,11,opt,name=SwcAttachmentAnoMetaInfo,proto3" json:"SwcAttachmentAnoMetaInfo,omitempty"`
	SwcAttachmentApoMetaInfo                *SwcAttachmentApoMetaInfoV1        `protobuf:"bytes,12,opt,name=SwcAttachmentApoMetaInfo,proto3" json:"SwcAttachmentApoMetaInfo,omitempty"`
	SwcAttachmentSwcUuid                    string                             `protobuf:"bytes,13,opt,name=SwcAttachmentSwcUuid,proto3" json:"SwcAttachmentSwcUuid,omitempty"`
	Permission                              *PermissionMetaInfoV1              `protobuf:"bytes,14,opt,name=Permission,proto3" json:"Permission,omitempty"`
	BelongingProjectUuid                    string                             `protobuf:"bytes,15,opt,name=BelongingProjectUuid,proto3" json:"BelongingProjectUuid,omitempty"`
}

func (x *SwcMetaInfoV1) Reset() {
	*x = SwcMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcMetaInfoV1) ProtoMessage() {}

func (x *SwcMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcMetaInfoV1.ProtoReflect.Descriptor instead.
func (*SwcMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{18}
}

func (x *SwcMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcMetaInfoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SwcMetaInfoV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SwcMetaInfoV1) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *SwcMetaInfoV1) GetSwcType() string {
	if x != nil {
		return x.SwcType
	}
	return ""
}

func (x *SwcMetaInfoV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SwcMetaInfoV1) GetLastModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedTime
	}
	return nil
}

func (x *SwcMetaInfoV1) GetSwcSnapshotMetaInfoList() []*SwcSnapshotMetaInfoV1 {
	if x != nil {
		return x.SwcSnapshotMetaInfoList
	}
	return nil
}

func (x *SwcMetaInfoV1) GetSwcIncrementOperationMetaInfoList() []*SwcIncrementOperationMetaInfoV1 {
	if x != nil {
		return x.SwcIncrementOperationMetaInfoList
	}
	return nil
}

func (x *SwcMetaInfoV1) GetCurrentIncrementOperationCollectionName() string {
	if x != nil {
		return x.CurrentIncrementOperationCollectionName
	}
	return ""
}

func (x *SwcMetaInfoV1) GetSwcAttachmentAnoMetaInfo() *SwcAttachmentAnoMetaInfoV1 {
	if x != nil {
		return x.SwcAttachmentAnoMetaInfo
	}
	return nil
}

func (x *SwcMetaInfoV1) GetSwcAttachmentApoMetaInfo() *SwcAttachmentApoMetaInfoV1 {
	if x != nil {
		return x.SwcAttachmentApoMetaInfo
	}
	return nil
}

func (x *SwcMetaInfoV1) GetSwcAttachmentSwcUuid() string {
	if x != nil {
		return x.SwcAttachmentSwcUuid
	}
	return ""
}

func (x *SwcMetaInfoV1) GetPermission() *PermissionMetaInfoV1 {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *SwcMetaInfoV1) GetBelongingProjectUuid() string {
	if x != nil {
		return x.BelongingProjectUuid
	}
	return ""
}

type SwcNodeInternalDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	N            int32   `protobuf:"varint,1,opt,name=N,proto3" json:"N,omitempty"`
	Type         int32   `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	X            float32 `protobuf:"fixed32,3,opt,name=X,proto3" json:"X,omitempty"`
	Y            float32 `protobuf:"fixed32,4,opt,name=Y,proto3" json:"Y,omitempty"`
	Z            float32 `protobuf:"fixed32,5,opt,name=Z,proto3" json:"Z,omitempty"`
	Radius       float32 `protobuf:"fixed32,6,opt,name=Radius,proto3" json:"Radius,omitempty"`
	Parent       int32   `protobuf:"varint,7,opt,name=Parent,proto3" json:"Parent,omitempty"`
	SegId        int32   `protobuf:"varint,8,opt,name=Seg_id,json=SegId,proto3" json:"Seg_id,omitempty"`
	Level        int32   `protobuf:"varint,9,opt,name=Level,proto3" json:"Level,omitempty"`
	Mode         int32   `protobuf:"varint,10,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Timestamp    int32   `protobuf:"varint,11,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	FeatureValue int32   `protobuf:"varint,12,opt,name=Feature_value,json=FeatureValue,proto3" json:"Feature_value,omitempty"`
}

func (x *SwcNodeInternalDataV1) Reset() {
	*x = SwcNodeInternalDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcNodeInternalDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcNodeInternalDataV1) ProtoMessage() {}

func (x *SwcNodeInternalDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcNodeInternalDataV1.ProtoReflect.Descriptor instead.
func (*SwcNodeInternalDataV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{19}
}

func (x *SwcNodeInternalDataV1) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetParent() int32 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetSegId() int32 {
	if x != nil {
		return x.SegId
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SwcNodeInternalDataV1) GetFeatureValue() int32 {
	if x != nil {
		return x.FeatureValue
	}
	return 0
}

type SwcNodeDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *MetaInfoBase          `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	SwcNodeInternalData *SwcNodeInternalDataV1 `protobuf:"bytes,2,opt,name=SwcNodeInternalData,proto3" json:"SwcNodeInternalData,omitempty"`
	Creator             string                 `protobuf:"bytes,3,opt,name=Creator,proto3" json:"Creator,omitempty"`
	CreateTime          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	LastModifiedTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=LastModifiedTime,proto3" json:"LastModifiedTime,omitempty"`
	CheckerUserUuid     string                 `protobuf:"bytes,6,opt,name=CheckerUserUuid,proto3" json:"CheckerUserUuid,omitempty"`
	DeviceType          string                 `protobuf:"bytes,7,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
}

func (x *SwcNodeDataV1) Reset() {
	*x = SwcNodeDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcNodeDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcNodeDataV1) ProtoMessage() {}

func (x *SwcNodeDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcNodeDataV1.ProtoReflect.Descriptor instead.
func (*SwcNodeDataV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{20}
}

func (x *SwcNodeDataV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcNodeDataV1) GetSwcNodeInternalData() *SwcNodeInternalDataV1 {
	if x != nil {
		return x.SwcNodeInternalData
	}
	return nil
}

func (x *SwcNodeDataV1) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *SwcNodeDataV1) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SwcNodeDataV1) GetLastModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedTime
	}
	return nil
}

func (x *SwcNodeDataV1) GetCheckerUserUuid() string {
	if x != nil {
		return x.CheckerUserUuid
	}
	return ""
}

func (x *SwcNodeDataV1) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

type SwcDataV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwcData []*SwcNodeDataV1 `protobuf:"bytes,1,rep,name=SwcData,proto3" json:"SwcData,omitempty"`
}

func (x *SwcDataV1) Reset() {
	*x = SwcDataV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcDataV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcDataV1) ProtoMessage() {}

func (x *SwcDataV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcDataV1.ProtoReflect.Descriptor instead.
func (*SwcDataV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{21}
}

func (x *SwcDataV1) GetSwcData() []*SwcNodeDataV1 {
	if x != nil {
		return x.SwcData
	}
	return nil
}

type DailyStatisticsMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                  *MetaInfoBase `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	Name                  string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description           string        `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Day                   string        `protobuf:"bytes,4,opt,name=Day,proto3" json:"Day,omitempty"`
	CreatedProjectNumber  int32         `protobuf:"varint,5,opt,name=CreatedProjectNumber,proto3" json:"CreatedProjectNumber,omitempty"`
	CreatedSwcNumber      int32         `protobuf:"varint,6,opt,name=CreatedSwcNumber,proto3" json:"CreatedSwcNumber,omitempty"`
	CreateSwcNodeNumber   int32         `protobuf:"varint,7,opt,name=CreateSwcNodeNumber,proto3" json:"CreateSwcNodeNumber,omitempty"`
	DeletedProjectNumber  int32         `protobuf:"varint,8,opt,name=DeletedProjectNumber,proto3" json:"DeletedProjectNumber,omitempty"`
	DeletedSwcNumber      int32         `protobuf:"varint,9,opt,name=DeletedSwcNumber,proto3" json:"DeletedSwcNumber,omitempty"`
	DeletedSwcNodeNumber  int32         `protobuf:"varint,10,opt,name=DeletedSwcNodeNumber,proto3" json:"DeletedSwcNodeNumber,omitempty"`
	ModifiedProjectNumber int32         `protobuf:"varint,11,opt,name=ModifiedProjectNumber,proto3" json:"ModifiedProjectNumber,omitempty"`
	ModifiedSwcNumber     int32         `protobuf:"varint,12,opt,name=ModifiedSwcNumber,proto3" json:"ModifiedSwcNumber,omitempty"`
	ModifiedSwcNodeNumber int32         `protobuf:"varint,13,opt,name=ModifiedSwcNodeNumber,proto3" json:"ModifiedSwcNodeNumber,omitempty"`
	ProjectQueryNumber    int32         `protobuf:"varint,14,opt,name=ProjectQueryNumber,proto3" json:"ProjectQueryNumber,omitempty"`
	SwcQueryNumber        int32         `protobuf:"varint,15,opt,name=SwcQueryNumber,proto3" json:"SwcQueryNumber,omitempty"`
	NodeQueryNumber       int32         `protobuf:"varint,16,opt,name=NodeQueryNumber,proto3" json:"NodeQueryNumber,omitempty"`
	ActiveUserNumber      int32         `protobuf:"varint,17,opt,name=ActiveUserNumber,proto3" json:"ActiveUserNumber,omitempty"`
}

func (x *DailyStatisticsMetaInfoV1) Reset() {
	*x = DailyStatisticsMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyStatisticsMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyStatisticsMetaInfoV1) ProtoMessage() {}

func (x *DailyStatisticsMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyStatisticsMetaInfoV1.ProtoReflect.Descriptor instead.
func (*DailyStatisticsMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{22}
}

func (x *DailyStatisticsMetaInfoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DailyStatisticsMetaInfoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DailyStatisticsMetaInfoV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DailyStatisticsMetaInfoV1) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *DailyStatisticsMetaInfoV1) GetCreatedProjectNumber() int32 {
	if x != nil {
		return x.CreatedProjectNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetCreatedSwcNumber() int32 {
	if x != nil {
		return x.CreatedSwcNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetCreateSwcNodeNumber() int32 {
	if x != nil {
		return x.CreateSwcNodeNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetDeletedProjectNumber() int32 {
	if x != nil {
		return x.DeletedProjectNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetDeletedSwcNumber() int32 {
	if x != nil {
		return x.DeletedSwcNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetDeletedSwcNodeNumber() int32 {
	if x != nil {
		return x.DeletedSwcNodeNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetModifiedProjectNumber() int32 {
	if x != nil {
		return x.ModifiedProjectNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetModifiedSwcNumber() int32 {
	if x != nil {
		return x.ModifiedSwcNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetModifiedSwcNodeNumber() int32 {
	if x != nil {
		return x.ModifiedSwcNodeNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetProjectQueryNumber() int32 {
	if x != nil {
		return x.ProjectQueryNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetSwcQueryNumber() int32 {
	if x != nil {
		return x.SwcQueryNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetNodeQueryNumber() int32 {
	if x != nil {
		return x.NodeQueryNumber
	}
	return 0
}

func (x *DailyStatisticsMetaInfoV1) GetActiveUserNumber() int32 {
	if x != nil {
		return x.ActiveUserNumber
	}
	return 0
}

type UserVerifyInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName     string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserToken    string `protobuf:"bytes,2,opt,name=UserToken,proto3" json:"UserToken,omitempty"`
	UserPassword string `protobuf:"bytes,3,opt,name=UserPassword,proto3" json:"UserPassword,omitempty"`
}

func (x *UserVerifyInfoV1) Reset() {
	*x = UserVerifyInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVerifyInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVerifyInfoV1) ProtoMessage() {}

func (x *UserVerifyInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVerifyInfoV1.ProtoReflect.Descriptor instead.
func (*UserVerifyInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{23}
}

func (x *UserVerifyInfoV1) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserVerifyInfoV1) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *UserVerifyInfoV1) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type RequestMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string `protobuf:"bytes,1,opt,name=ApiVersion,proto3" json:"ApiVersion,omitempty"`
}

func (x *RequestMetaInfoV1) Reset() {
	*x = RequestMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetaInfoV1) ProtoMessage() {}

func (x *RequestMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetaInfoV1.ProtoReflect.Descriptor instead.
func (*RequestMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{24}
}

func (x *RequestMetaInfoV1) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

type ResponseMetaInfoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ResponseMetaInfoV1) Reset() {
	*x = ResponseMetaInfoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMetaInfoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetaInfoV1) ProtoMessage() {}

func (x *ResponseMetaInfoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMetaInfoV1.ProtoReflect.Descriptor instead.
func (*ResponseMetaInfoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{25}
}

func (x *ResponseMetaInfoV1) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ResponseMetaInfoV1) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseMetaInfoV1) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SwcAttachmentAnoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *MetaInfoBase `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	APOFILE string        `protobuf:"bytes,2,opt,name=APOFILE,proto3" json:"APOFILE,omitempty"`
	SWCFILE string        `protobuf:"bytes,3,opt,name=SWCFILE,proto3" json:"SWCFILE,omitempty"`
}

func (x *SwcAttachmentAnoV1) Reset() {
	*x = SwcAttachmentAnoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcAttachmentAnoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcAttachmentAnoV1) ProtoMessage() {}

func (x *SwcAttachmentAnoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcAttachmentAnoV1.ProtoReflect.Descriptor instead.
func (*SwcAttachmentAnoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{26}
}

func (x *SwcAttachmentAnoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcAttachmentAnoV1) GetAPOFILE() string {
	if x != nil {
		return x.APOFILE
	}
	return ""
}

func (x *SwcAttachmentAnoV1) GetSWCFILE() string {
	if x != nil {
		return x.SWCFILE
	}
	return ""
}

type SwcAttachmentApoV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *MetaInfoBase `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	N         int32         `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	Orderinfo string        `protobuf:"bytes,3,opt,name=Orderinfo,proto3" json:"Orderinfo,omitempty"`
	Name      string        `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Comment   string        `protobuf:"bytes,5,opt,name=Comment,proto3" json:"Comment,omitempty"`
	Z         float32       `protobuf:"fixed32,6,opt,name=Z,proto3" json:"Z,omitempty"`
	X         float32       `protobuf:"fixed32,7,opt,name=X,proto3" json:"X,omitempty"`
	Y         float32       `protobuf:"fixed32,8,opt,name=Y,proto3" json:"Y,omitempty"`
	Pixmax    float32       `protobuf:"fixed32,9,opt,name=Pixmax,proto3" json:"Pixmax,omitempty"`
	Intensity float32       `protobuf:"fixed32,10,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Sdev      float32       `protobuf:"fixed32,11,opt,name=Sdev,proto3" json:"Sdev,omitempty"`
	Volsize   float32       `protobuf:"fixed32,12,opt,name=Volsize,proto3" json:"Volsize,omitempty"`
	Mass      float32       `protobuf:"fixed32,13,opt,name=Mass,proto3" json:"Mass,omitempty"`
	ColorR    int32         `protobuf:"varint,14,opt,name=ColorR,proto3" json:"ColorR,omitempty"`
	ColorG    int32         `protobuf:"varint,15,opt,name=ColorG,proto3" json:"ColorG,omitempty"`
	ColorB    int32         `protobuf:"varint,16,opt,name=ColorB,proto3" json:"ColorB,omitempty"`
}

func (x *SwcAttachmentApoV1) Reset() {
	*x = SwcAttachmentApoV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcAttachmentApoV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcAttachmentApoV1) ProtoMessage() {}

func (x *SwcAttachmentApoV1) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcAttachmentApoV1.ProtoReflect.Descriptor instead.
func (*SwcAttachmentApoV1) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{27}
}

func (x *SwcAttachmentApoV1) GetBase() *MetaInfoBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SwcAttachmentApoV1) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetOrderinfo() string {
	if x != nil {
		return x.Orderinfo
	}
	return ""
}

func (x *SwcAttachmentApoV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SwcAttachmentApoV1) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *SwcAttachmentApoV1) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetPixmax() float32 {
	if x != nil {
		return x.Pixmax
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetIntensity() float32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetSdev() float32 {
	if x != nil {
		return x.Sdev
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetVolsize() float32 {
	if x != nil {
		return x.Volsize
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetMass() float32 {
	if x != nil {
		return x.Mass
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetColorR() int32 {
	if x != nil {
		return x.ColorR
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetColorG() int32 {
	if x != nil {
		return x.ColorG
	}
	return 0
}

func (x *SwcAttachmentApoV1) GetColorB() int32 {
	if x != nil {
		return x.ColorB
	}
	return 0
}

type SwcUuidName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwcUuid string `protobuf:"bytes,1,opt,name=SwcUuid,proto3" json:"SwcUuid,omitempty"`
	SwcName string `protobuf:"bytes,2,opt,name=SwcName,proto3" json:"SwcName,omitempty"`
}

func (x *SwcUuidName) Reset() {
	*x = SwcUuidName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Message_Message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwcUuidName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwcUuidName) ProtoMessage() {}

func (x *SwcUuidName) ProtoReflect() protoreflect.Message {
	mi := &file_Message_Message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwcUuidName.ProtoReflect.Descriptor instead.
func (*SwcUuidName) Descriptor() ([]byte, []int) {
	return file_Message_Message_proto_rawDescGZIP(), []int{28}
}

func (x *SwcUuidName) GetSwcUuid() string {
	if x != nil {
		return x.SwcUuid
	}
	return ""
}

func (x *SwcUuidName) GetSwcName() string {
	if x != nil {
		return x.SwcName
	}
	return ""
}

var File_Message_Message_proto protoreflect.FileDescriptor

var file_Message_Message_proto_rawDesc = []byte{
	0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6b, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a,
	0x24, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x48, 0x65, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x48, 0x65, 0x61, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x42, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfc, 0x03, 0x0a, 0x14, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x65, 0x56,
	0x31, 0x12, 0x56, 0x0a, 0x26, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x26, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x41, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x1e, 0x41,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1e, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x53, 0x77, 0x63, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x41, 0x6c, 0x6c, 0x53, 0x77, 0x63, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x26, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x26, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x77, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x6c, 0x56, 0x31,
	0x12, 0x30, 0x0a, 0x13, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x4b, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x65, 0x56, 0x31, 0x52, 0x12, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x65, 0x22,
	0xd1, 0x0d, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x65, 0x56, 0x31, 0x12, 0x42, 0x0a, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x40, 0x0a, 0x1b, 0x52,
	0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3a, 0x0a,
	0x18, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x12, 0x3a, 0x0a, 0x18, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x77, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x77, 0x63, 0x12, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72,
	0x69, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72, 0x69,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x63, 0x12,
	0x3c, 0x0a, 0x19, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a,
	0x1c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x42, 0x0a, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x77,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x65, 0x72,
	0x69, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x65, 0x72, 0x69, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x24, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x41, 0x6e, 0x64, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x6f, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6e, 0x6f, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x6e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x6f, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x6f,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x1c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x77, 0x63,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x42, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x63, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6c, 0x56, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x65, 0x56, 0x31, 0x52, 0x03, 0x41, 0x63, 0x65,
	0x22, 0x5e, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6c, 0x56, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x41, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x65, 0x56, 0x31, 0x52, 0x03, 0x41, 0x63, 0x65,
	0x22, 0xaf, 0x01, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x30, 0x0a, 0x05, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x6c, 0x56, 0x31, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6c, 0x56, 0x31, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a,
	0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6c, 0x56, 0x31, 0x52, 0x06, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31,
	0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x03, 0x41, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x65, 0x56, 0x31, 0x52, 0x03, 0x41, 0x63, 0x65, 0x22, 0x83,
	0x03, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x10, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x77, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x77, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x15, 0x53, 0x77, 0x63, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x27,
	0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x53, 0x77, 0x63, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x53, 0x77, 0x63, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x1f,
	0x53, 0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12,
	0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x20, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x20, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x4e, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x17, 0x53, 0x77,
	0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x31, 0x52, 0x12, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x53, 0x77, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x52, 0x07, 0x53, 0x77, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x52, 0x0b,
	0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x1b, 0x53,
	0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x31, 0x12, 0x54, 0x0a, 0x15, 0x53, 0x77,
	0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x15, 0x53, 0x77, 0x63, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x44, 0x0a, 0x1a, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x1a, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xb1, 0x07, 0x0a,
	0x0d, 0x53, 0x77, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x27,
	0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x77, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x77, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x53, 0x77, 0x63, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x77, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x52, 0x17, 0x53, 0x77, 0x63, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a,
	0x21, 0x53, 0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31,
	0x52, 0x21, 0x53, 0x77, 0x63, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x27, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x27, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5d, 0x0a,
	0x18, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x56, 0x31, 0x52, 0x18, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6e, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x18,
	0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x6f,
	0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56,
	0x31, 0x52, 0x18, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x70, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x14, 0x53,
	0x77, 0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x77, 0x63, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x53, 0x77, 0x63, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x77, 0x63, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x3b, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14,
	0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x42, 0x65, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x97, 0x02, 0x0a, 0x15, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x4e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01,
	0x58, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x5a, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x53, 0x65, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x65, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x0d, 0x53,
	0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04,
	0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77, 0x63, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31,
	0x52, 0x13, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x4c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a,
	0x09, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x77,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x31, 0x52, 0x07, 0x53, 0x77, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfa, 0x05, 0x0a, 0x19, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x44, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x77,
	0x63, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x77, 0x63, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53,
	0x77, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x77, 0x63, 0x4e,
	0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x77, 0x63,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x53, 0x77, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x4e, 0x6f, 0x64, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x31, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x56, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x12, 0x53, 0x77, 0x63, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x6f, 0x56, 0x31, 0x12, 0x27, 0x0a, 0x04,
	0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x50, 0x4f, 0x46, 0x49, 0x4c, 0x45,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x50, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x57, 0x43, 0x46, 0x49, 0x4c, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x57, 0x43, 0x46, 0x49, 0x4c, 0x45, 0x22, 0x81, 0x03, 0x0a, 0x12, 0x53, 0x77,
	0x63, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x6f, 0x56, 0x31,
	0x12, 0x27, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x4e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x4e, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x5a, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58, 0x12,
	0x0c, 0x0a, 0x01, 0x59, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x69, 0x78, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50,
	0x69, 0x78, 0x6d, 0x61, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x64, 0x65, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x53, 0x64, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x4d, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x47, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x47, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x22, 0x41, 0x0a,
	0x0b, 0x53, 0x77, 0x63, 0x55, 0x75, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x77, 0x63, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53,
	0x77, 0x63, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x77, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x77, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x2a, 0x7a, 0x0a, 0x14, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x10, 0x06, 0x42, 0x2f, 0x5a, 0x2d,
	0x44, 0x42, 0x4d, 0x53, 0x2f, 0x53, 0x77, 0x63, 0x44, 0x62, 0x6d, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Message_Message_proto_rawDescOnce sync.Once
	file_Message_Message_proto_rawDescData = file_Message_Message_proto_rawDesc
)

func file_Message_Message_proto_rawDescGZIP() []byte {
	file_Message_Message_proto_rawDescOnce.Do(func() {
		file_Message_Message_proto_rawDescData = protoimpl.X.CompressGZIP(file_Message_Message_proto_rawDescData)
	})
	return file_Message_Message_proto_rawDescData
}

var file_Message_Message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Message_Message_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_Message_Message_proto_goTypes = []interface{}{
	(IncrementOperationV1)(0),                    // 0: proto.IncrementOperationV1
	(*MetaInfoBase)(nil),                         // 1: proto.MetaInfoBase
	(*BrainTellServerMysqlDBCompatibleData)(nil), // 2: proto.BrainTellServerMysqlDBCompatibleData
	(*UserMetaInfoV1)(nil),                       // 3: proto.UserMetaInfoV1
	(*PermissionGroupAceV1)(nil),                 // 4: proto.PermissionGroupAceV1
	(*PermissionGroupAclV1)(nil),                 // 5: proto.PermissionGroupAclV1
	(*PermissionAceV1)(nil),                      // 6: proto.PermissionAceV1
	(*UserPermissionAclV1)(nil),                  // 7: proto.UserPermissionAclV1
	(*GroupPermissionAclV1)(nil),                 // 8: proto.GroupPermissionAclV1
	(*PermissionMetaInfoV1)(nil),                 // 9: proto.PermissionMetaInfoV1
	(*PermissionGroupMetaInfoV1)(nil),            // 10: proto.PermissionGroupMetaInfoV1
	(*ProjectMetaInfoV1)(nil),                    // 11: proto.ProjectMetaInfoV1
	(*SwcSnapshotMetaInfoV1)(nil),                // 12: proto.SwcSnapshotMetaInfoV1
	(*SwcIncrementOperationMetaInfoV1)(nil),      // 13: proto.SwcIncrementOperationMetaInfoV1
	(*NodeNParentV1)(nil),                        // 14: proto.NodeNParentV1
	(*SwcIncrementOperationV1)(nil),              // 15: proto.SwcIncrementOperationV1
	(*SwcIncrementOperationListV1)(nil),          // 16: proto.SwcIncrementOperationListV1
	(*SwcAttachmentAnoMetaInfoV1)(nil),           // 17: proto.SwcAttachmentAnoMetaInfoV1
	(*SwcAttachmentApoMetaInfoV1)(nil),           // 18: proto.SwcAttachmentApoMetaInfoV1
	(*SwcMetaInfoV1)(nil),                        // 19: proto.SwcMetaInfoV1
	(*SwcNodeInternalDataV1)(nil),                // 20: proto.SwcNodeInternalDataV1
	(*SwcNodeDataV1)(nil),                        // 21: proto.SwcNodeDataV1
	(*SwcDataV1)(nil),                            // 22: proto.SwcDataV1
	(*DailyStatisticsMetaInfoV1)(nil),            // 23: proto.DailyStatisticsMetaInfoV1
	(*UserVerifyInfoV1)(nil),                     // 24: proto.UserVerifyInfoV1
	(*RequestMetaInfoV1)(nil),                    // 25: proto.RequestMetaInfoV1
	(*ResponseMetaInfoV1)(nil),                   // 26: proto.ResponseMetaInfoV1
	(*SwcAttachmentAnoV1)(nil),                   // 27: proto.SwcAttachmentAnoV1
	(*SwcAttachmentApoV1)(nil),                   // 28: proto.SwcAttachmentApoV1
	(*SwcUuidName)(nil),                          // 29: proto.SwcUuidName
	(*timestamppb.Timestamp)(nil),                // 30: google.protobuf.Timestamp
}
var file_Message_Message_proto_depIdxs = []int32{
	1,  // 0: proto.UserMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	30, // 1: proto.UserMetaInfoV1.CreateTime:type_name -> google.protobuf.Timestamp
	2,  // 2: proto.UserMetaInfoV1.CompatibleData:type_name -> proto.BrainTellServerMysqlDBCompatibleData
	4,  // 3: proto.PermissionGroupAclV1.PermissionGroupAce:type_name -> proto.PermissionGroupAceV1
	6,  // 4: proto.UserPermissionAclV1.Ace:type_name -> proto.PermissionAceV1
	6,  // 5: proto.GroupPermissionAclV1.Ace:type_name -> proto.PermissionAceV1
	7,  // 6: proto.PermissionMetaInfoV1.Owner:type_name -> proto.UserPermissionAclV1
	7,  // 7: proto.PermissionMetaInfoV1.Users:type_name -> proto.UserPermissionAclV1
	8,  // 8: proto.PermissionMetaInfoV1.Groups:type_name -> proto.GroupPermissionAclV1
	1,  // 9: proto.PermissionGroupMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	4,  // 10: proto.PermissionGroupMetaInfoV1.Ace:type_name -> proto.PermissionGroupAceV1
	1,  // 11: proto.ProjectMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	30, // 12: proto.ProjectMetaInfoV1.CreateTime:type_name -> google.protobuf.Timestamp
	30, // 13: proto.ProjectMetaInfoV1.LastModifiedTime:type_name -> google.protobuf.Timestamp
	9,  // 14: proto.ProjectMetaInfoV1.Permission:type_name -> proto.PermissionMetaInfoV1
	1,  // 15: proto.SwcSnapshotMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	30, // 16: proto.SwcSnapshotMetaInfoV1.CreateTime:type_name -> google.protobuf.Timestamp
	1,  // 17: proto.SwcIncrementOperationMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	30, // 18: proto.SwcIncrementOperationMetaInfoV1.CreateTime:type_name -> google.protobuf.Timestamp
	1,  // 19: proto.SwcIncrementOperationV1.Base:type_name -> proto.MetaInfoBase
	30, // 20: proto.SwcIncrementOperationV1.CreateTime:type_name -> google.protobuf.Timestamp
	0,  // 21: proto.SwcIncrementOperationV1.IncrementOperation:type_name -> proto.IncrementOperationV1
	22, // 22: proto.SwcIncrementOperationV1.SwcData:type_name -> proto.SwcDataV1
	14, // 23: proto.SwcIncrementOperationV1.NodeNParent:type_name -> proto.NodeNParentV1
	15, // 24: proto.SwcIncrementOperationListV1.SwcIncrementOperation:type_name -> proto.SwcIncrementOperationV1
	1,  // 25: proto.SwcMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	30, // 26: proto.SwcMetaInfoV1.CreateTime:type_name -> google.protobuf.Timestamp
	30, // 27: proto.SwcMetaInfoV1.LastModifiedTime:type_name -> google.protobuf.Timestamp
	12, // 28: proto.SwcMetaInfoV1.SwcSnapshotMetaInfoList:type_name -> proto.SwcSnapshotMetaInfoV1
	13, // 29: proto.SwcMetaInfoV1.SwcIncrementOperationMetaInfoList:type_name -> proto.SwcIncrementOperationMetaInfoV1
	17, // 30: proto.SwcMetaInfoV1.SwcAttachmentAnoMetaInfo:type_name -> proto.SwcAttachmentAnoMetaInfoV1
	18, // 31: proto.SwcMetaInfoV1.SwcAttachmentApoMetaInfo:type_name -> proto.SwcAttachmentApoMetaInfoV1
	9,  // 32: proto.SwcMetaInfoV1.Permission:type_name -> proto.PermissionMetaInfoV1
	1,  // 33: proto.SwcNodeDataV1.Base:type_name -> proto.MetaInfoBase
	20, // 34: proto.SwcNodeDataV1.SwcNodeInternalData:type_name -> proto.SwcNodeInternalDataV1
	30, // 35: proto.SwcNodeDataV1.CreateTime:type_name -> google.protobuf.Timestamp
	30, // 36: proto.SwcNodeDataV1.LastModifiedTime:type_name -> google.protobuf.Timestamp
	21, // 37: proto.SwcDataV1.SwcData:type_name -> proto.SwcNodeDataV1
	1,  // 38: proto.DailyStatisticsMetaInfoV1.Base:type_name -> proto.MetaInfoBase
	1,  // 39: proto.SwcAttachmentAnoV1.Base:type_name -> proto.MetaInfoBase
	1,  // 40: proto.SwcAttachmentApoV1.Base:type_name -> proto.MetaInfoBase
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_Message_Message_proto_init() }
func file_Message_Message_proto_init() {
	if File_Message_Message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Message_Message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaInfoBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrainTellServerMysqlDBCompatibleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionGroupAceV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionGroupAclV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionAceV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermissionAclV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPermissionAclV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionGroupMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcSnapshotMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcIncrementOperationMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeNParentV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcIncrementOperationV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcIncrementOperationListV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcAttachmentAnoMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcAttachmentApoMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcNodeInternalDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcNodeDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcDataV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyStatisticsMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVerifyInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMetaInfoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcAttachmentAnoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcAttachmentApoV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Message_Message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwcUuidName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Message_Message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Message_Message_proto_goTypes,
		DependencyIndexes: file_Message_Message_proto_depIdxs,
		EnumInfos:         file_Message_Message_proto_enumTypes,
		MessageInfos:      file_Message_Message_proto_msgTypes,
	}.Build()
	File_Message_Message_proto = out.File
	file_Message_Message_proto_rawDesc = nil
	file_Message_Message_proto_goTypes = nil
	file_Message_Message_proto_depIdxs = nil
}
