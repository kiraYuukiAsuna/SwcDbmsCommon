// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: Service/Service.proto
#ifndef GRPC_Service_2fService_2eproto__INCLUDED
#define GRPC_Service_2fService_2eproto__INCLUDED

#include "Service/Service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace proto {

class DBMS final {
 public:
  static constexpr char const* service_full_name() {
    return "proto.DBMS";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::proto::CreateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::proto::DeleteUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::proto::UpdateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::proto::GetUserByUuidResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>> AsyncGetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>>(AsyncGetUserByUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>> PrepareAsyncGetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>>(PrepareAsyncGetUserByUuidRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::proto::GetUserByNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>> AsyncGetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>>(AsyncGetUserByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>> PrepareAsyncGetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>>(PrepareAsyncGetUserByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::proto::GetAllUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>> AsyncGetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>>(AsyncGetAllUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>> PrepareAsyncGetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>>(PrepareAsyncGetAllUserRaw(context, request, cq));
    }
    virtual ::grpc::Status UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::proto::UserLoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>> AsyncUserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>>(AsyncUserLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>> PrepareAsyncUserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>>(PrepareAsyncUserLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::proto::UserLogoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>> AsyncUserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>>(AsyncUserLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>> PrepareAsyncUserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>>(PrepareAsyncUserLogoutRaw(context, request, cq));
    }
    virtual ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::proto::UserOnlineHeartBeatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>> AsyncUserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>>(AsyncUserOnlineHeartBeatNotificationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>> PrepareAsyncUserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>>(PrepareAsyncUserOnlineHeartBeatNotificationsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::proto::GetUserPermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>> AsyncGetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>>(AsyncGetUserPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>> PrepareAsyncGetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>>(PrepareAsyncGetUserPermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::proto::GetPermissionGroupByUuidResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>> AsyncGetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>>(AsyncGetPermissionGroupByUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>> PrepareAsyncGetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>>(PrepareAsyncGetPermissionGroupByUuidRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::proto::GetPermissionGroupByNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>> AsyncGetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>>(AsyncGetPermissionGroupByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>> PrepareAsyncGetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>>(PrepareAsyncGetPermissionGroupByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::proto::GetAllPermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>> AsyncGetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>>(AsyncGetAllPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>> PrepareAsyncGetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>>(PrepareAsyncGetAllPermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::proto::ChangeUserPermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>> AsyncChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>>(AsyncChangeUserPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>> PrepareAsyncChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>>(PrepareAsyncChangeUserPermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::proto::CreateProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>> AsyncCreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>>(AsyncCreateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>> PrepareAsyncCreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>>(PrepareAsyncCreateProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::proto::DeleteProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>> AsyncDeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>>(AsyncDeleteProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>> PrepareAsyncDeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>>(PrepareAsyncDeleteProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::proto::UpdateProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>> AsyncUpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>>(AsyncUpdateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>> PrepareAsyncUpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>>(PrepareAsyncUpdateProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::proto::GetProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>> AsyncGetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>>(AsyncGetProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>> PrepareAsyncGetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>>(PrepareAsyncGetProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::proto::GetAllProjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>> AsyncGetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>>(AsyncGetAllProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>> PrepareAsyncGetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>>(PrepareAsyncGetAllProjectRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::proto::CreateSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>> AsyncCreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>>(AsyncCreateSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>> PrepareAsyncCreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>>(PrepareAsyncCreateSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::proto::DeleteSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>> AsyncDeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>>(AsyncDeleteSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>> PrepareAsyncDeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>>(PrepareAsyncDeleteSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::proto::UpdateSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>> AsyncUpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>>(AsyncUpdateSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>> PrepareAsyncUpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>>(PrepareAsyncUpdateSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::proto::GetSwcMetaInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>> AsyncGetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>>(AsyncGetSwcMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>> PrepareAsyncGetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>>(PrepareAsyncGetSwcMetaInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::proto::GetAllSwcMetaInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>> AsyncGetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>>(AsyncGetAllSwcMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>> PrepareAsyncGetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>>(PrepareAsyncGetAllSwcMetaInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::proto::CreateSwcSnapshotResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>> AsyncCreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>>(AsyncCreateSwcSnapshotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>> PrepareAsyncCreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>>(PrepareAsyncCreateSwcSnapshotRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::proto::GetAllSnapshotMetaInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>> AsyncGetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>>(AsyncGetAllSnapshotMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>> PrepareAsyncGetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>>(PrepareAsyncGetAllSnapshotMetaInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::proto::GetSnapshotResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>> AsyncGetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>>(AsyncGetSnapshotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>> PrepareAsyncGetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>>(PrepareAsyncGetSnapshotRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::proto::GetAllIncrementOperationMetaInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>> AsyncGetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>>(AsyncGetAllIncrementOperationMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>> PrepareAsyncGetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>>(PrepareAsyncGetAllIncrementOperationMetaInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::proto::GetIncrementOperationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>> AsyncGetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>>(AsyncGetIncrementOperationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>> PrepareAsyncGetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>>(PrepareAsyncGetIncrementOperationRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::proto::CreateSwcNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>> AsyncCreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>>(AsyncCreateSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>> PrepareAsyncCreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>>(PrepareAsyncCreateSwcNodeDataRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::proto::DeleteSwcNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>> AsyncDeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>>(AsyncDeleteSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>> PrepareAsyncDeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>>(PrepareAsyncDeleteSwcNodeDataRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::proto::UpdateSwcNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>> AsyncUpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>>(AsyncUpdateSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>> PrepareAsyncUpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>>(PrepareAsyncUpdateSwcNodeDataRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::proto::GetSwcNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>> AsyncGetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>>(AsyncGetSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>> PrepareAsyncGetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>>(PrepareAsyncGetSwcNodeDataRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::proto::GetSwcFullNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>> AsyncGetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>>(AsyncGetSwcFullNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>> PrepareAsyncGetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>>(PrepareAsyncGetSwcFullNodeDataRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>> AsyncGetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>>(AsyncGetSwcNodeDataListByTimeAndUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>> PrepareAsyncGetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>>(PrepareAsyncGetSwcNodeDataListByTimeAndUserRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::proto::CreateDailyStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>> AsyncCreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>>(AsyncCreateDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>> PrepareAsyncCreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>>(PrepareAsyncCreateDailyStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::proto::DeleteDailyStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>> AsyncDeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>>(AsyncDeleteDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>> PrepareAsyncDeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>>(PrepareAsyncDeleteDailyStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::proto::UpdateDailyStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>> AsyncUpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>>(AsyncUpdateDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>> PrepareAsyncUpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>>(PrepareAsyncUpdateDailyStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::proto::GetDailyStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>> AsyncGetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>>(AsyncGetDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>> PrepareAsyncGetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>>(PrepareAsyncGetDailyStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::proto::GetAllDailyStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>> AsyncGetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>>(AsyncGetAllDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>> PrepareAsyncGetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>>(PrepareAsyncGetAllDailyStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::proto::CreateSwcAttachmentAnoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>> AsyncCreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>>(AsyncCreateSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>> PrepareAsyncCreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>>(PrepareAsyncCreateSwcAttachmentAnoRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::proto::DeleteSwcAttachmentAnoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>> AsyncDeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>>(AsyncDeleteSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>> PrepareAsyncDeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>>(PrepareAsyncDeleteSwcAttachmentAnoRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::proto::UpdateSwcAttachmentAnoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>> AsyncUpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>>(AsyncUpdateSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>> PrepareAsyncUpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>>(PrepareAsyncUpdateSwcAttachmentAnoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::proto::GetSwcAttachmentAnoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>> AsyncGetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>>(AsyncGetSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>> PrepareAsyncGetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>>(PrepareAsyncGetSwcAttachmentAnoRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::proto::CreateSwcAttachmentApoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>> AsyncCreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>>(AsyncCreateSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>> PrepareAsyncCreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>>(PrepareAsyncCreateSwcAttachmentApoRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::proto::DeleteSwcAttachmentApoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>> AsyncDeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>>(AsyncDeleteSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>> PrepareAsyncDeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>>(PrepareAsyncDeleteSwcAttachmentApoRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::proto::UpdateSwcAttachmentApoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>> AsyncUpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>>(AsyncUpdateSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>> PrepareAsyncUpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>>(PrepareAsyncUpdateSwcAttachmentApoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::proto::GetSwcAttachmentApoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>> AsyncGetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>>(AsyncGetSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>> PrepareAsyncGetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>>(PrepareAsyncGetSwcAttachmentApoRaw(context, request, cq));
    }
    virtual ::grpc::Status RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::proto::RevertSwcVersionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>> AsyncRevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>>(AsyncRevertSwcVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>> PrepareAsyncRevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>>(PrepareAsyncRevertSwcVersionRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::proto::CreateSwcAttachmentSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>> AsyncCreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>>(AsyncCreateSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>> PrepareAsyncCreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>>(PrepareAsyncCreateSwcAttachmentSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::proto::DeleteSwcAttachmentSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>> AsyncDeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>>(AsyncDeleteSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>> PrepareAsyncDeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>>(PrepareAsyncDeleteSwcAttachmentSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::proto::UpdateSwcAttachmentSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>> AsyncUpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>>(AsyncUpdateSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>> PrepareAsyncUpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>>(PrepareAsyncUpdateSwcAttachmentSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::proto::GetSwcAttachmentSwcResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>> AsyncGetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>>(AsyncGetSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>> PrepareAsyncGetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>>(PrepareAsyncGetSwcAttachmentSwcRaw(context, request, cq));
    }
    virtual ::grpc::Status CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::proto::CreatePermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>> AsyncCreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>>(AsyncCreatePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>> PrepareAsyncCreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>>(PrepareAsyncCreatePermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::proto::DeletePermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>> AsyncDeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>>(AsyncDeletePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>> PrepareAsyncDeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>>(PrepareAsyncDeletePermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::proto::UpdatePermissionGroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>> AsyncUpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>>(AsyncUpdatePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>> PrepareAsyncUpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>>(PrepareAsyncUpdatePermissionGroupRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>> AsyncGetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>>(AsyncGetProjectSwcNamesByProjectUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>> PrepareAsyncGetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>>(PrepareAsyncGetProjectSwcNamesByProjectUuidRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::proto::UpdateSwcNParentInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>> AsyncUpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>>(AsyncUpdateSwcNParentInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>> PrepareAsyncUpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>>(PrepareAsyncUpdateSwcNParentInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::proto::ClearAllNodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>> AsyncClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>>(AsyncClearAllNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>> PrepareAsyncClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>>(PrepareAsyncClearAllNodesRaw(context, request, cq));
    }
    virtual ::grpc::Status OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::proto::OverwriteSwcNodeDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>> AsyncOverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>>(AsyncOverwriteSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>> PrepareAsyncOverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>>(PrepareAsyncOverwriteSwcNodeDataRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>* AsyncGetUserByUuidRaw(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByUuidResponse>* PrepareAsyncGetUserByUuidRaw(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>* AsyncGetUserByNameRaw(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserByNameResponse>* PrepareAsyncGetUserByNameRaw(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>* AsyncGetAllUserRaw(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllUserResponse>* PrepareAsyncGetAllUserRaw(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>* AsyncUserLoginRaw(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLoginResponse>* PrepareAsyncUserLoginRaw(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>* AsyncUserLogoutRaw(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserLogoutResponse>* PrepareAsyncUserLogoutRaw(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>* AsyncUserOnlineHeartBeatNotificationsRaw(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UserOnlineHeartBeatResponse>* PrepareAsyncUserOnlineHeartBeatNotificationsRaw(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>* AsyncGetUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetUserPermissionGroupResponse>* PrepareAsyncGetUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>* AsyncGetPermissionGroupByUuidRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByUuidResponse>* PrepareAsyncGetPermissionGroupByUuidRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>* AsyncGetPermissionGroupByNameRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetPermissionGroupByNameResponse>* PrepareAsyncGetPermissionGroupByNameRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>* AsyncGetAllPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllPermissionGroupResponse>* PrepareAsyncGetAllPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>* AsyncChangeUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ChangeUserPermissionGroupResponse>* PrepareAsyncChangeUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>* AsyncCreateProjectRaw(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateProjectResponse>* PrepareAsyncCreateProjectRaw(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>* AsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteProjectResponse>* PrepareAsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>* AsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateProjectResponse>* PrepareAsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>* AsyncGetProjectRaw(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectResponse>* PrepareAsyncGetProjectRaw(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>* AsyncGetAllProjectRaw(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllProjectResponse>* PrepareAsyncGetAllProjectRaw(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>* AsyncCreateSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcResponse>* PrepareAsyncCreateSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>* AsyncDeleteSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcResponse>* PrepareAsyncDeleteSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>* AsyncUpdateSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcResponse>* PrepareAsyncUpdateSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>* AsyncGetSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcMetaInfoResponse>* PrepareAsyncGetSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>* AsyncGetAllSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSwcMetaInfoResponse>* PrepareAsyncGetAllSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>* AsyncCreateSwcSnapshotRaw(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcSnapshotResponse>* PrepareAsyncCreateSwcSnapshotRaw(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>* AsyncGetAllSnapshotMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllSnapshotMetaInfoResponse>* PrepareAsyncGetAllSnapshotMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>* AsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSnapshotResponse>* PrepareAsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>* AsyncGetAllIncrementOperationMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllIncrementOperationMetaInfoResponse>* PrepareAsyncGetAllIncrementOperationMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>* AsyncGetIncrementOperationRaw(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetIncrementOperationResponse>* PrepareAsyncGetIncrementOperationRaw(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>* AsyncCreateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcNodeDataResponse>* PrepareAsyncCreateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>* AsyncDeleteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcNodeDataResponse>* PrepareAsyncDeleteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>* AsyncUpdateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNodeDataResponse>* PrepareAsyncUpdateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>* AsyncGetSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataResponse>* PrepareAsyncGetSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>* AsyncGetSwcFullNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcFullNodeDataResponse>* PrepareAsyncGetSwcFullNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>* AsyncGetSwcNodeDataListByTimeAndUserRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcNodeDataListByTimeAndUserResponse>* PrepareAsyncGetSwcNodeDataListByTimeAndUserRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>* AsyncCreateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateDailyStatisticsResponse>* PrepareAsyncCreateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>* AsyncDeleteDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteDailyStatisticsResponse>* PrepareAsyncDeleteDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>* AsyncUpdateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateDailyStatisticsResponse>* PrepareAsyncUpdateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>* AsyncGetDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetDailyStatisticsResponse>* PrepareAsyncGetDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>* AsyncGetAllDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetAllDailyStatisticsResponse>* PrepareAsyncGetAllDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>* AsyncCreateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentAnoResponse>* PrepareAsyncCreateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>* AsyncDeleteSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentAnoResponse>* PrepareAsyncDeleteSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>* AsyncUpdateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentAnoResponse>* PrepareAsyncUpdateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>* AsyncGetSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentAnoResponse>* PrepareAsyncGetSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>* AsyncCreateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentApoResponse>* PrepareAsyncCreateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>* AsyncDeleteSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentApoResponse>* PrepareAsyncDeleteSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>* AsyncUpdateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentApoResponse>* PrepareAsyncUpdateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>* AsyncGetSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentApoResponse>* PrepareAsyncGetSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>* AsyncRevertSwcVersionRaw(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::RevertSwcVersionResponse>* PrepareAsyncRevertSwcVersionRaw(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>* AsyncCreateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreateSwcAttachmentSwcResponse>* PrepareAsyncCreateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>* AsyncDeleteSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeleteSwcAttachmentSwcResponse>* PrepareAsyncDeleteSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>* AsyncUpdateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcAttachmentSwcResponse>* PrepareAsyncUpdateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>* AsyncGetSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetSwcAttachmentSwcResponse>* PrepareAsyncGetSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>* AsyncCreatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::CreatePermissionGroupResponse>* PrepareAsyncCreatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>* AsyncDeletePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::DeletePermissionGroupResponse>* PrepareAsyncDeletePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>* AsyncUpdatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdatePermissionGroupResponse>* PrepareAsyncUpdatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>* AsyncGetProjectSwcNamesByProjectUuidRaw(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::GetProjectSwcNamesByProjectUuidResponse>* PrepareAsyncGetProjectSwcNamesByProjectUuidRaw(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>* AsyncUpdateSwcNParentInfoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::UpdateSwcNParentInfoResponse>* PrepareAsyncUpdateSwcNParentInfoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>* AsyncClearAllNodesRaw(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::ClearAllNodesResponse>* PrepareAsyncClearAllNodesRaw(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>* AsyncOverwriteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::OverwriteSwcNodeDataResponse>* PrepareAsyncOverwriteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::proto::CreateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>> AsyncCreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>>(AsyncCreateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>> PrepareAsyncCreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>>(PrepareAsyncCreateUserRaw(context, request, cq));
    }
    ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::proto::DeleteUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>> AsyncDeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>>(AsyncDeleteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>> PrepareAsyncDeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>>(PrepareAsyncDeleteUserRaw(context, request, cq));
    }
    ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::proto::UpdateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    ::grpc::Status GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::proto::GetUserByUuidResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>> AsyncGetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>>(AsyncGetUserByUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>> PrepareAsyncGetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>>(PrepareAsyncGetUserByUuidRaw(context, request, cq));
    }
    ::grpc::Status GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::proto::GetUserByNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>> AsyncGetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>>(AsyncGetUserByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>> PrepareAsyncGetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>>(PrepareAsyncGetUserByNameRaw(context, request, cq));
    }
    ::grpc::Status GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::proto::GetAllUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>> AsyncGetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>>(AsyncGetAllUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>> PrepareAsyncGetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>>(PrepareAsyncGetAllUserRaw(context, request, cq));
    }
    ::grpc::Status UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::proto::UserLoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>> AsyncUserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>>(AsyncUserLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>> PrepareAsyncUserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>>(PrepareAsyncUserLoginRaw(context, request, cq));
    }
    ::grpc::Status UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::proto::UserLogoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>> AsyncUserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>>(AsyncUserLogoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>> PrepareAsyncUserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>>(PrepareAsyncUserLogoutRaw(context, request, cq));
    }
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::proto::UserOnlineHeartBeatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>> AsyncUserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>>(AsyncUserOnlineHeartBeatNotificationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>> PrepareAsyncUserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>>(PrepareAsyncUserOnlineHeartBeatNotificationsRaw(context, request, cq));
    }
    ::grpc::Status GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::proto::GetUserPermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>> AsyncGetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>>(AsyncGetUserPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>> PrepareAsyncGetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>>(PrepareAsyncGetUserPermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::proto::GetPermissionGroupByUuidResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>> AsyncGetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>>(AsyncGetPermissionGroupByUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>> PrepareAsyncGetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>>(PrepareAsyncGetPermissionGroupByUuidRaw(context, request, cq));
    }
    ::grpc::Status GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::proto::GetPermissionGroupByNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>> AsyncGetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>>(AsyncGetPermissionGroupByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>> PrepareAsyncGetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>>(PrepareAsyncGetPermissionGroupByNameRaw(context, request, cq));
    }
    ::grpc::Status GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::proto::GetAllPermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>> AsyncGetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>>(AsyncGetAllPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>> PrepareAsyncGetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>>(PrepareAsyncGetAllPermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::proto::ChangeUserPermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>> AsyncChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>>(AsyncChangeUserPermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>> PrepareAsyncChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>>(PrepareAsyncChangeUserPermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::proto::CreateProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>> AsyncCreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>>(AsyncCreateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>> PrepareAsyncCreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>>(PrepareAsyncCreateProjectRaw(context, request, cq));
    }
    ::grpc::Status DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::proto::DeleteProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>> AsyncDeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>>(AsyncDeleteProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>> PrepareAsyncDeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>>(PrepareAsyncDeleteProjectRaw(context, request, cq));
    }
    ::grpc::Status UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::proto::UpdateProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>> AsyncUpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>>(AsyncUpdateProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>> PrepareAsyncUpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>>(PrepareAsyncUpdateProjectRaw(context, request, cq));
    }
    ::grpc::Status GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::proto::GetProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>> AsyncGetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>>(AsyncGetProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>> PrepareAsyncGetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>>(PrepareAsyncGetProjectRaw(context, request, cq));
    }
    ::grpc::Status GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::proto::GetAllProjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>> AsyncGetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>>(AsyncGetAllProjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>> PrepareAsyncGetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>>(PrepareAsyncGetAllProjectRaw(context, request, cq));
    }
    ::grpc::Status CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::proto::CreateSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>> AsyncCreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>>(AsyncCreateSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>> PrepareAsyncCreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>>(PrepareAsyncCreateSwcRaw(context, request, cq));
    }
    ::grpc::Status DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::proto::DeleteSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>> AsyncDeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>>(AsyncDeleteSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>> PrepareAsyncDeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>>(PrepareAsyncDeleteSwcRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::proto::UpdateSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>> AsyncUpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>>(AsyncUpdateSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>> PrepareAsyncUpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>>(PrepareAsyncUpdateSwcRaw(context, request, cq));
    }
    ::grpc::Status GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::proto::GetSwcMetaInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>> AsyncGetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>>(AsyncGetSwcMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>> PrepareAsyncGetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>>(PrepareAsyncGetSwcMetaInfoRaw(context, request, cq));
    }
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::proto::GetAllSwcMetaInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>> AsyncGetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>>(AsyncGetAllSwcMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>> PrepareAsyncGetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>>(PrepareAsyncGetAllSwcMetaInfoRaw(context, request, cq));
    }
    ::grpc::Status CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::proto::CreateSwcSnapshotResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>> AsyncCreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>>(AsyncCreateSwcSnapshotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>> PrepareAsyncCreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>>(PrepareAsyncCreateSwcSnapshotRaw(context, request, cq));
    }
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::proto::GetAllSnapshotMetaInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>> AsyncGetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>>(AsyncGetAllSnapshotMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>> PrepareAsyncGetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>>(PrepareAsyncGetAllSnapshotMetaInfoRaw(context, request, cq));
    }
    ::grpc::Status GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::proto::GetSnapshotResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>> AsyncGetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>>(AsyncGetSnapshotRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>> PrepareAsyncGetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>>(PrepareAsyncGetSnapshotRaw(context, request, cq));
    }
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::proto::GetAllIncrementOperationMetaInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>> AsyncGetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>>(AsyncGetAllIncrementOperationMetaInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>> PrepareAsyncGetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>>(PrepareAsyncGetAllIncrementOperationMetaInfoRaw(context, request, cq));
    }
    ::grpc::Status GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::proto::GetIncrementOperationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>> AsyncGetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>>(AsyncGetIncrementOperationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>> PrepareAsyncGetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>>(PrepareAsyncGetIncrementOperationRaw(context, request, cq));
    }
    ::grpc::Status CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::proto::CreateSwcNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>> AsyncCreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>>(AsyncCreateSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>> PrepareAsyncCreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>>(PrepareAsyncCreateSwcNodeDataRaw(context, request, cq));
    }
    ::grpc::Status DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::proto::DeleteSwcNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>> AsyncDeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>>(AsyncDeleteSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>> PrepareAsyncDeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>>(PrepareAsyncDeleteSwcNodeDataRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::proto::UpdateSwcNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>> AsyncUpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>>(AsyncUpdateSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>> PrepareAsyncUpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>>(PrepareAsyncUpdateSwcNodeDataRaw(context, request, cq));
    }
    ::grpc::Status GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::proto::GetSwcNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>> AsyncGetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>>(AsyncGetSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>> PrepareAsyncGetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>>(PrepareAsyncGetSwcNodeDataRaw(context, request, cq));
    }
    ::grpc::Status GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::proto::GetSwcFullNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>> AsyncGetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>>(AsyncGetSwcFullNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>> PrepareAsyncGetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>>(PrepareAsyncGetSwcFullNodeDataRaw(context, request, cq));
    }
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>> AsyncGetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>>(AsyncGetSwcNodeDataListByTimeAndUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>> PrepareAsyncGetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>>(PrepareAsyncGetSwcNodeDataListByTimeAndUserRaw(context, request, cq));
    }
    ::grpc::Status CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::proto::CreateDailyStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>> AsyncCreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>>(AsyncCreateDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>> PrepareAsyncCreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>>(PrepareAsyncCreateDailyStatisticsRaw(context, request, cq));
    }
    ::grpc::Status DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::proto::DeleteDailyStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>> AsyncDeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>>(AsyncDeleteDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>> PrepareAsyncDeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>>(PrepareAsyncDeleteDailyStatisticsRaw(context, request, cq));
    }
    ::grpc::Status UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::proto::UpdateDailyStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>> AsyncUpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>>(AsyncUpdateDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>> PrepareAsyncUpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>>(PrepareAsyncUpdateDailyStatisticsRaw(context, request, cq));
    }
    ::grpc::Status GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::proto::GetDailyStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>> AsyncGetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>>(AsyncGetDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>> PrepareAsyncGetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>>(PrepareAsyncGetDailyStatisticsRaw(context, request, cq));
    }
    ::grpc::Status GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::proto::GetAllDailyStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>> AsyncGetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>>(AsyncGetAllDailyStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>> PrepareAsyncGetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>>(PrepareAsyncGetAllDailyStatisticsRaw(context, request, cq));
    }
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::proto::CreateSwcAttachmentAnoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>> AsyncCreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>>(AsyncCreateSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>> PrepareAsyncCreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>>(PrepareAsyncCreateSwcAttachmentAnoRaw(context, request, cq));
    }
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::proto::DeleteSwcAttachmentAnoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>> AsyncDeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>>(AsyncDeleteSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>> PrepareAsyncDeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>>(PrepareAsyncDeleteSwcAttachmentAnoRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::proto::UpdateSwcAttachmentAnoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>> AsyncUpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>>(AsyncUpdateSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>> PrepareAsyncUpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>>(PrepareAsyncUpdateSwcAttachmentAnoRaw(context, request, cq));
    }
    ::grpc::Status GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::proto::GetSwcAttachmentAnoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>> AsyncGetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>>(AsyncGetSwcAttachmentAnoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>> PrepareAsyncGetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>>(PrepareAsyncGetSwcAttachmentAnoRaw(context, request, cq));
    }
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::proto::CreateSwcAttachmentApoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>> AsyncCreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>>(AsyncCreateSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>> PrepareAsyncCreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>>(PrepareAsyncCreateSwcAttachmentApoRaw(context, request, cq));
    }
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::proto::DeleteSwcAttachmentApoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>> AsyncDeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>>(AsyncDeleteSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>> PrepareAsyncDeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>>(PrepareAsyncDeleteSwcAttachmentApoRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::proto::UpdateSwcAttachmentApoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>> AsyncUpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>>(AsyncUpdateSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>> PrepareAsyncUpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>>(PrepareAsyncUpdateSwcAttachmentApoRaw(context, request, cq));
    }
    ::grpc::Status GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::proto::GetSwcAttachmentApoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>> AsyncGetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>>(AsyncGetSwcAttachmentApoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>> PrepareAsyncGetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>>(PrepareAsyncGetSwcAttachmentApoRaw(context, request, cq));
    }
    ::grpc::Status RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::proto::RevertSwcVersionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>> AsyncRevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>>(AsyncRevertSwcVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>> PrepareAsyncRevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>>(PrepareAsyncRevertSwcVersionRaw(context, request, cq));
    }
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::proto::CreateSwcAttachmentSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>> AsyncCreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>>(AsyncCreateSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>> PrepareAsyncCreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>>(PrepareAsyncCreateSwcAttachmentSwcRaw(context, request, cq));
    }
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::proto::DeleteSwcAttachmentSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>> AsyncDeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>>(AsyncDeleteSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>> PrepareAsyncDeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>>(PrepareAsyncDeleteSwcAttachmentSwcRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::proto::UpdateSwcAttachmentSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>> AsyncUpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>>(AsyncUpdateSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>> PrepareAsyncUpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>>(PrepareAsyncUpdateSwcAttachmentSwcRaw(context, request, cq));
    }
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::proto::GetSwcAttachmentSwcResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>> AsyncGetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>>(AsyncGetSwcAttachmentSwcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>> PrepareAsyncGetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>>(PrepareAsyncGetSwcAttachmentSwcRaw(context, request, cq));
    }
    ::grpc::Status CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::proto::CreatePermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>> AsyncCreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>>(AsyncCreatePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>> PrepareAsyncCreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>>(PrepareAsyncCreatePermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::proto::DeletePermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>> AsyncDeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>>(AsyncDeletePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>> PrepareAsyncDeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>>(PrepareAsyncDeletePermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::proto::UpdatePermissionGroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>> AsyncUpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>>(AsyncUpdatePermissionGroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>> PrepareAsyncUpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>>(PrepareAsyncUpdatePermissionGroupRaw(context, request, cq));
    }
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>> AsyncGetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>>(AsyncGetProjectSwcNamesByProjectUuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>> PrepareAsyncGetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>>(PrepareAsyncGetProjectSwcNamesByProjectUuidRaw(context, request, cq));
    }
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::proto::UpdateSwcNParentInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>> AsyncUpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>>(AsyncUpdateSwcNParentInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>> PrepareAsyncUpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>>(PrepareAsyncUpdateSwcNParentInfoRaw(context, request, cq));
    }
    ::grpc::Status ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::proto::ClearAllNodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>> AsyncClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>>(AsyncClearAllNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>> PrepareAsyncClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>>(PrepareAsyncClearAllNodesRaw(context, request, cq));
    }
    ::grpc::Status OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::proto::OverwriteSwcNodeDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>> AsyncOverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>>(AsyncOverwriteSwcNodeDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>> PrepareAsyncOverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>>(PrepareAsyncOverwriteSwcNodeDataRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateUser(::grpc::ClientContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUser(::grpc::ClientContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUser(::grpc::ClientContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserByUuid(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserByName(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllUser(::grpc::ClientContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response, std::function<void(::grpc::Status)>) override;
      void UserLogin(::grpc::ClientContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response, std::function<void(::grpc::Status)>) override;
      void UserLogout(::grpc::ClientContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response, std::function<void(::grpc::Status)>) override;
      void UserOnlineHeartBeatNotifications(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserPermissionGroup(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPermissionGroupByUuid(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPermissionGroupByName(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllPermissionGroup(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void ChangeUserPermissionGroup(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateProject(::grpc::ClientContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteProject(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateProject(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProject(::grpc::ClientContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllProject(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwc(::grpc::ClientContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllSwcMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwcSnapshot(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllSnapshotMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSnapshot(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllIncrementOperationMetaInfo(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetIncrementOperation(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwcNodeData(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSwcNodeData(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwcNodeData(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcNodeData(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcFullNodeData(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcNodeDataListByTimeAndUser(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDailyStatistics(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDailyStatistics(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateDailyStatistics(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDailyStatistics(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAllDailyStatistics(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcAttachmentAno(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcAttachmentApo(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response, std::function<void(::grpc::Status)>) override;
      void RevertSwcVersion(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSwcAttachmentSwc(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void CreatePermissionGroup(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void DeletePermissionGroup(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdatePermissionGroup(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response, std::function<void(::grpc::Status)>) override;
      void GetProjectSwcNamesByProjectUuid(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSwcNParentInfo(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response, std::function<void(::grpc::Status)>) override;
      void ClearAllNodes(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response, std::function<void(::grpc::Status)>) override;
      void OverwriteSwcNodeData(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateUserResponse>* PrepareAsyncCreateUserRaw(::grpc::ClientContext* context, const ::proto::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteUserResponse>* PrepareAsyncDeleteUserRaw(::grpc::ClientContext* context, const ::proto::DeleteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateUserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::proto::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>* AsyncGetUserByUuidRaw(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserByUuidResponse>* PrepareAsyncGetUserByUuidRaw(::grpc::ClientContext* context, const ::proto::GetUserByUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>* AsyncGetUserByNameRaw(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserByNameResponse>* PrepareAsyncGetUserByNameRaw(::grpc::ClientContext* context, const ::proto::GetUserByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>* AsyncGetAllUserRaw(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllUserResponse>* PrepareAsyncGetAllUserRaw(::grpc::ClientContext* context, const ::proto::GetAllUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>* AsyncUserLoginRaw(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserLoginResponse>* PrepareAsyncUserLoginRaw(::grpc::ClientContext* context, const ::proto::UserLoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>* AsyncUserLogoutRaw(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserLogoutResponse>* PrepareAsyncUserLogoutRaw(::grpc::ClientContext* context, const ::proto::UserLogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>* AsyncUserOnlineHeartBeatNotificationsRaw(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UserOnlineHeartBeatResponse>* PrepareAsyncUserOnlineHeartBeatNotificationsRaw(::grpc::ClientContext* context, const ::proto::UserOnlineHeartBeatNotification& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>* AsyncGetUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetUserPermissionGroupResponse>* PrepareAsyncGetUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>* AsyncGetPermissionGroupByUuidRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByUuidResponse>* PrepareAsyncGetPermissionGroupByUuidRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>* AsyncGetPermissionGroupByNameRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetPermissionGroupByNameResponse>* PrepareAsyncGetPermissionGroupByNameRaw(::grpc::ClientContext* context, const ::proto::GetPermissionGroupByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>* AsyncGetAllPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllPermissionGroupResponse>* PrepareAsyncGetAllPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::GetAllPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>* AsyncChangeUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ChangeUserPermissionGroupResponse>* PrepareAsyncChangeUserPermissionGroupRaw(::grpc::ClientContext* context, const ::proto::ChangeUserPermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>* AsyncCreateProjectRaw(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateProjectResponse>* PrepareAsyncCreateProjectRaw(::grpc::ClientContext* context, const ::proto::CreateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>* AsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteProjectResponse>* PrepareAsyncDeleteProjectRaw(::grpc::ClientContext* context, const ::proto::DeleteProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>* AsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateProjectResponse>* PrepareAsyncUpdateProjectRaw(::grpc::ClientContext* context, const ::proto::UpdateProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>* AsyncGetProjectRaw(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetProjectResponse>* PrepareAsyncGetProjectRaw(::grpc::ClientContext* context, const ::proto::GetProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>* AsyncGetAllProjectRaw(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllProjectResponse>* PrepareAsyncGetAllProjectRaw(::grpc::ClientContext* context, const ::proto::GetAllProjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>* AsyncCreateSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcResponse>* PrepareAsyncCreateSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>* AsyncDeleteSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcResponse>* PrepareAsyncDeleteSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>* AsyncUpdateSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcResponse>* PrepareAsyncUpdateSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>* AsyncGetSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcMetaInfoResponse>* PrepareAsyncGetSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>* AsyncGetAllSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllSwcMetaInfoResponse>* PrepareAsyncGetAllSwcMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSwcMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>* AsyncCreateSwcSnapshotRaw(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcSnapshotResponse>* PrepareAsyncCreateSwcSnapshotRaw(::grpc::ClientContext* context, const ::proto::CreateSwcSnapshotRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>* AsyncGetAllSnapshotMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllSnapshotMetaInfoResponse>* PrepareAsyncGetAllSnapshotMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllSnapshotMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>* AsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSnapshotResponse>* PrepareAsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::proto::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>* AsyncGetAllIncrementOperationMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllIncrementOperationMetaInfoResponse>* PrepareAsyncGetAllIncrementOperationMetaInfoRaw(::grpc::ClientContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>* AsyncGetIncrementOperationRaw(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetIncrementOperationResponse>* PrepareAsyncGetIncrementOperationRaw(::grpc::ClientContext* context, const ::proto::GetIncrementOperationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>* AsyncCreateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcNodeDataResponse>* PrepareAsyncCreateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::CreateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>* AsyncDeleteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcNodeDataResponse>* PrepareAsyncDeleteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>* AsyncUpdateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNodeDataResponse>* PrepareAsyncUpdateSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>* AsyncGetSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataResponse>* PrepareAsyncGetSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>* AsyncGetSwcFullNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcFullNodeDataResponse>* PrepareAsyncGetSwcFullNodeDataRaw(::grpc::ClientContext* context, const ::proto::GetSwcFullNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>* AsyncGetSwcNodeDataListByTimeAndUserRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcNodeDataListByTimeAndUserResponse>* PrepareAsyncGetSwcNodeDataListByTimeAndUserRaw(::grpc::ClientContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>* AsyncCreateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateDailyStatisticsResponse>* PrepareAsyncCreateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::CreateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>* AsyncDeleteDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteDailyStatisticsResponse>* PrepareAsyncDeleteDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::DeleteDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>* AsyncUpdateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateDailyStatisticsResponse>* PrepareAsyncUpdateDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::UpdateDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>* AsyncGetDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetDailyStatisticsResponse>* PrepareAsyncGetDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>* AsyncGetAllDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetAllDailyStatisticsResponse>* PrepareAsyncGetAllDailyStatisticsRaw(::grpc::ClientContext* context, const ::proto::GetAllDailyStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>* AsyncCreateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentAnoResponse>* PrepareAsyncCreateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>* AsyncDeleteSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentAnoResponse>* PrepareAsyncDeleteSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>* AsyncUpdateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentAnoResponse>* PrepareAsyncUpdateSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>* AsyncGetSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentAnoResponse>* PrepareAsyncGetSwcAttachmentAnoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentAnoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>* AsyncCreateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentApoResponse>* PrepareAsyncCreateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>* AsyncDeleteSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentApoResponse>* PrepareAsyncDeleteSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>* AsyncUpdateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentApoResponse>* PrepareAsyncUpdateSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>* AsyncGetSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentApoResponse>* PrepareAsyncGetSwcAttachmentApoRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentApoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>* AsyncRevertSwcVersionRaw(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::RevertSwcVersionResponse>* PrepareAsyncRevertSwcVersionRaw(::grpc::ClientContext* context, const ::proto::RevertSwcVersionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>* AsyncCreateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreateSwcAttachmentSwcResponse>* PrepareAsyncCreateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::CreateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>* AsyncDeleteSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeleteSwcAttachmentSwcResponse>* PrepareAsyncDeleteSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::DeleteSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>* AsyncUpdateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcAttachmentSwcResponse>* PrepareAsyncUpdateSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>* AsyncGetSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetSwcAttachmentSwcResponse>* PrepareAsyncGetSwcAttachmentSwcRaw(::grpc::ClientContext* context, const ::proto::GetSwcAttachmentSwcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>* AsyncCreatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::CreatePermissionGroupResponse>* PrepareAsyncCreatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::CreatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>* AsyncDeletePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::DeletePermissionGroupResponse>* PrepareAsyncDeletePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::DeletePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>* AsyncUpdatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdatePermissionGroupResponse>* PrepareAsyncUpdatePermissionGroupRaw(::grpc::ClientContext* context, const ::proto::UpdatePermissionGroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>* AsyncGetProjectSwcNamesByProjectUuidRaw(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::GetProjectSwcNamesByProjectUuidResponse>* PrepareAsyncGetProjectSwcNamesByProjectUuidRaw(::grpc::ClientContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>* AsyncUpdateSwcNParentInfoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::UpdateSwcNParentInfoResponse>* PrepareAsyncUpdateSwcNParentInfoRaw(::grpc::ClientContext* context, const ::proto::UpdateSwcNParentInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>* AsyncClearAllNodesRaw(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::ClearAllNodesResponse>* PrepareAsyncClearAllNodesRaw(::grpc::ClientContext* context, const ::proto::ClearAllNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>* AsyncOverwriteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::OverwriteSwcNodeDataResponse>* PrepareAsyncOverwriteSwcNodeDataRaw(::grpc::ClientContext* context, const ::proto::OverwriteSwcNodeDataRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserByUuid_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserByName_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UserLogin_;
    const ::grpc::internal::RpcMethod rpcmethod_UserLogout_;
    const ::grpc::internal::RpcMethod rpcmethod_UserOnlineHeartBeatNotifications_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserPermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPermissionGroupByUuid_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPermissionGroupByName_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllPermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangeUserPermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProject_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteProject_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllProject_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcMetaInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllSwcMetaInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwcSnapshot_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllSnapshotMetaInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSnapshot_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllIncrementOperationMetaInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIncrementOperation_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwcNodeData_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSwcNodeData_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwcNodeData_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcNodeData_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcFullNodeData_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcNodeDataListByTimeAndUser_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDailyStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDailyStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDailyStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDailyStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllDailyStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwcAttachmentAno_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSwcAttachmentAno_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwcAttachmentAno_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcAttachmentAno_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwcAttachmentApo_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSwcAttachmentApo_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwcAttachmentApo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcAttachmentApo_;
    const ::grpc::internal::RpcMethod rpcmethod_RevertSwcVersion_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSwcAttachmentSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSwcAttachmentSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwcAttachmentSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSwcAttachmentSwc_;
    const ::grpc::internal::RpcMethod rpcmethod_CreatePermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_DeletePermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdatePermissionGroup_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProjectSwcNamesByProjectUuid_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSwcNParentInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_ClearAllNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_OverwriteSwcNodeData_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response);
    virtual ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response);
    virtual ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response);
    virtual ::grpc::Status GetUserByUuid(::grpc::ServerContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response);
    virtual ::grpc::Status GetUserByName(::grpc::ServerContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response);
    virtual ::grpc::Status GetAllUser(::grpc::ServerContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response);
    virtual ::grpc::Status UserLogin(::grpc::ServerContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response);
    virtual ::grpc::Status UserLogout(::grpc::ServerContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response);
    virtual ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response);
    virtual ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response);
    virtual ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response);
    virtual ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response);
    virtual ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response);
    virtual ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response);
    virtual ::grpc::Status CreateProject(::grpc::ServerContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response);
    virtual ::grpc::Status DeleteProject(::grpc::ServerContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response);
    virtual ::grpc::Status UpdateProject(::grpc::ServerContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response);
    virtual ::grpc::Status GetProject(::grpc::ServerContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response);
    virtual ::grpc::Status GetAllProject(::grpc::ServerContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response);
    virtual ::grpc::Status CreateSwc(::grpc::ServerContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response);
    virtual ::grpc::Status DeleteSwc(::grpc::ServerContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response);
    virtual ::grpc::Status UpdateSwc(::grpc::ServerContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response);
    virtual ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response);
    virtual ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response);
    virtual ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response);
    virtual ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response);
    virtual ::grpc::Status GetSnapshot(::grpc::ServerContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response);
    virtual ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response);
    virtual ::grpc::Status GetIncrementOperation(::grpc::ServerContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response);
    virtual ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response);
    virtual ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response);
    virtual ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response);
    virtual ::grpc::Status GetSwcNodeData(::grpc::ServerContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response);
    virtual ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response);
    virtual ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response);
    virtual ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response);
    virtual ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response);
    virtual ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response);
    virtual ::grpc::Status GetDailyStatistics(::grpc::ServerContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response);
    virtual ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response);
    virtual ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response);
    virtual ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response);
    virtual ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response);
    virtual ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response);
    virtual ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response);
    virtual ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response);
    virtual ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response);
    virtual ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response);
    virtual ::grpc::Status RevertSwcVersion(::grpc::ServerContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response);
    virtual ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response);
    virtual ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response);
    virtual ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response);
    virtual ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response);
    virtual ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response);
    virtual ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response);
    virtual ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response);
    virtual ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response);
    virtual ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response);
    virtual ::grpc::Status ClearAllNodes(::grpc::ServerContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response);
    virtual ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::proto::CreateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::proto::DeleteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::proto::UpdateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserByUuid(::grpc::ServerContext* context, ::proto::GetUserByUuidRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetUserByUuidResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserByName() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserByName(::grpc::ServerContext* context, ::proto::GetUserByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetUserByNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllUser() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllUser(::grpc::ServerContext* context, ::proto::GetAllUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UserLogin() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserLogin(::grpc::ServerContext* context, ::proto::UserLoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UserLoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UserLogout() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserLogout(::grpc::ServerContext* context, ::proto::UserLogoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UserLogoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserOnlineHeartBeatNotifications(::grpc::ServerContext* context, ::proto::UserOnlineHeartBeatNotification* request, ::grpc::ServerAsyncResponseWriter< ::proto::UserOnlineHeartBeatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserPermissionGroup(::grpc::ServerContext* context, ::proto::GetUserPermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetUserPermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionGroupByUuid(::grpc::ServerContext* context, ::proto::GetPermissionGroupByUuidRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetPermissionGroupByUuidResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionGroupByName(::grpc::ServerContext* context, ::proto::GetPermissionGroupByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetPermissionGroupByNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPermissionGroup(::grpc::ServerContext* context, ::proto::GetAllPermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllPermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeUserPermissionGroup(::grpc::ServerContext* context, ::proto::ChangeUserPermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ChangeUserPermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateProject() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProject(::grpc::ServerContext* context, ::proto::CreateProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteProject() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProject(::grpc::ServerContext* context, ::proto::DeleteProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateProject() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProject(::grpc::ServerContext* context, ::proto::UpdateProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProject() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProject(::grpc::ServerContext* context, ::proto::GetProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllProject() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllProject(::grpc::ServerContext* context, ::proto::GetAllProjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllProjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwc() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwc(::grpc::ServerContext* context, ::proto::CreateSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwc(::grpc::ServerContext* context, ::proto::DeleteSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwc(::grpc::ServerContext* context, ::proto::UpdateSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcMetaInfo(::grpc::ServerContext* context, ::proto::GetSwcMetaInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcMetaInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllSwcMetaInfo(::grpc::ServerContext* context, ::proto::GetAllSwcMetaInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllSwcMetaInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcSnapshot(::grpc::ServerContext* context, ::proto::CreateSwcSnapshotRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcSnapshotResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllSnapshotMetaInfo(::grpc::ServerContext* context, ::proto::GetAllSnapshotMetaInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllSnapshotMetaInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSnapshot(::grpc::ServerContext* context, ::proto::GetSnapshotRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSnapshotResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllIncrementOperationMetaInfo(::grpc::ServerContext* context, ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllIncrementOperationMetaInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIncrementOperation(::grpc::ServerContext* context, ::proto::GetIncrementOperationRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetIncrementOperationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcNodeData(::grpc::ServerContext* context, ::proto::CreateSwcNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcNodeData(::grpc::ServerContext* context, ::proto::DeleteSwcNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteSwcNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcNodeData(::grpc::ServerContext* context, ::proto::UpdateSwcNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcNodeData(::grpc::ServerContext* context, ::proto::GetSwcNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcFullNodeData(::grpc::ServerContext* context, ::proto::GetSwcFullNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcFullNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* context, ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcNodeDataListByTimeAndUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDailyStatistics(::grpc::ServerContext* context, ::proto::CreateDailyStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateDailyStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDailyStatistics(::grpc::ServerContext* context, ::proto::DeleteDailyStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteDailyStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDailyStatistics(::grpc::ServerContext* context, ::proto::UpdateDailyStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateDailyStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDailyStatistics(::grpc::ServerContext* context, ::proto::GetDailyStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetDailyStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDailyStatistics(::grpc::ServerContext* context, ::proto::GetAllDailyStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetAllDailyStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentAno(::grpc::ServerContext* context, ::proto::CreateSwcAttachmentAnoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcAttachmentAnoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentAno(::grpc::ServerContext* context, ::proto::DeleteSwcAttachmentAnoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteSwcAttachmentAnoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentAno(::grpc::ServerContext* context, ::proto::UpdateSwcAttachmentAnoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcAttachmentAnoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentAno(::grpc::ServerContext* context, ::proto::GetSwcAttachmentAnoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcAttachmentAnoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentApo(::grpc::ServerContext* context, ::proto::CreateSwcAttachmentApoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcAttachmentApoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentApo(::grpc::ServerContext* context, ::proto::DeleteSwcAttachmentApoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteSwcAttachmentApoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentApo(::grpc::ServerContext* context, ::proto::UpdateSwcAttachmentApoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcAttachmentApoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentApo(::grpc::ServerContext* context, ::proto::GetSwcAttachmentApoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcAttachmentApoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRevertSwcVersion(::grpc::ServerContext* context, ::proto::RevertSwcVersionRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::RevertSwcVersionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentSwc(::grpc::ServerContext* context, ::proto::CreateSwcAttachmentSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreateSwcAttachmentSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentSwc(::grpc::ServerContext* context, ::proto::DeleteSwcAttachmentSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeleteSwcAttachmentSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentSwc(::grpc::ServerContext* context, ::proto::UpdateSwcAttachmentSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcAttachmentSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentSwc(::grpc::ServerContext* context, ::proto::GetSwcAttachmentSwcRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetSwcAttachmentSwcResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePermissionGroup(::grpc::ServerContext* context, ::proto::CreatePermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::CreatePermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionGroup(::grpc::ServerContext* context, ::proto::DeletePermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::DeletePermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePermissionGroup(::grpc::ServerContext* context, ::proto::UpdatePermissionGroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdatePermissionGroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProjectSwcNamesByProjectUuid(::grpc::ServerContext* context, ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::GetProjectSwcNamesByProjectUuidResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcNParentInfo(::grpc::ServerContext* context, ::proto::UpdateSwcNParentInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::UpdateSwcNParentInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodAsync(58);
    }
    ~WithAsyncMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearAllNodes(::grpc::ServerContext* context, ::proto::ClearAllNodesRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::ClearAllNodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodAsync(59);
    }
    ~WithAsyncMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOverwriteSwcNodeData(::grpc::ServerContext* context, ::proto::OverwriteSwcNodeDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::proto::OverwriteSwcNodeDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateUser<WithAsyncMethod_DeleteUser<WithAsyncMethod_UpdateUser<WithAsyncMethod_GetUserByUuid<WithAsyncMethod_GetUserByName<WithAsyncMethod_GetAllUser<WithAsyncMethod_UserLogin<WithAsyncMethod_UserLogout<WithAsyncMethod_UserOnlineHeartBeatNotifications<WithAsyncMethod_GetUserPermissionGroup<WithAsyncMethod_GetPermissionGroupByUuid<WithAsyncMethod_GetPermissionGroupByName<WithAsyncMethod_GetAllPermissionGroup<WithAsyncMethod_ChangeUserPermissionGroup<WithAsyncMethod_CreateProject<WithAsyncMethod_DeleteProject<WithAsyncMethod_UpdateProject<WithAsyncMethod_GetProject<WithAsyncMethod_GetAllProject<WithAsyncMethod_CreateSwc<WithAsyncMethod_DeleteSwc<WithAsyncMethod_UpdateSwc<WithAsyncMethod_GetSwcMetaInfo<WithAsyncMethod_GetAllSwcMetaInfo<WithAsyncMethod_CreateSwcSnapshot<WithAsyncMethod_GetAllSnapshotMetaInfo<WithAsyncMethod_GetSnapshot<WithAsyncMethod_GetAllIncrementOperationMetaInfo<WithAsyncMethod_GetIncrementOperation<WithAsyncMethod_CreateSwcNodeData<WithAsyncMethod_DeleteSwcNodeData<WithAsyncMethod_UpdateSwcNodeData<WithAsyncMethod_GetSwcNodeData<WithAsyncMethod_GetSwcFullNodeData<WithAsyncMethod_GetSwcNodeDataListByTimeAndUser<WithAsyncMethod_CreateDailyStatistics<WithAsyncMethod_DeleteDailyStatistics<WithAsyncMethod_UpdateDailyStatistics<WithAsyncMethod_GetDailyStatistics<WithAsyncMethod_GetAllDailyStatistics<WithAsyncMethod_CreateSwcAttachmentAno<WithAsyncMethod_DeleteSwcAttachmentAno<WithAsyncMethod_UpdateSwcAttachmentAno<WithAsyncMethod_GetSwcAttachmentAno<WithAsyncMethod_CreateSwcAttachmentApo<WithAsyncMethod_DeleteSwcAttachmentApo<WithAsyncMethod_UpdateSwcAttachmentApo<WithAsyncMethod_GetSwcAttachmentApo<WithAsyncMethod_RevertSwcVersion<WithAsyncMethod_CreateSwcAttachmentSwc<WithAsyncMethod_DeleteSwcAttachmentSwc<WithAsyncMethod_UpdateSwcAttachmentSwc<WithAsyncMethod_GetSwcAttachmentSwc<WithAsyncMethod_CreatePermissionGroup<WithAsyncMethod_DeletePermissionGroup<WithAsyncMethod_UpdatePermissionGroup<WithAsyncMethod_GetProjectSwcNamesByProjectUuid<WithAsyncMethod_UpdateSwcNParentInfo<WithAsyncMethod_ClearAllNodes<WithAsyncMethod_OverwriteSwcNodeData<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateUser() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateUserRequest, ::proto::CreateUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateUserRequest* request, ::proto::CreateUserResponse* response) { return this->CreateUser(context, request, response); }));}
    void SetMessageAllocatorFor_CreateUser(
        ::grpc::MessageAllocator< ::proto::CreateUserRequest, ::proto::CreateUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateUserRequest, ::proto::CreateUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteUser() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteUserRequest, ::proto::DeleteUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteUserRequest* request, ::proto::DeleteUserResponse* response) { return this->DeleteUser(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteUser(
        ::grpc::MessageAllocator< ::proto::DeleteUserRequest, ::proto::DeleteUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteUserRequest, ::proto::DeleteUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUser() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateUserRequest, ::proto::UpdateUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateUserRequest* request, ::proto::UpdateUserResponse* response) { return this->UpdateUser(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUser(
        ::grpc::MessageAllocator< ::proto::UpdateUserRequest, ::proto::UpdateUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateUserRequest, ::proto::UpdateUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetUserByUuidRequest, ::proto::GetUserByUuidResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetUserByUuidRequest* request, ::proto::GetUserByUuidResponse* response) { return this->GetUserByUuid(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserByUuid(
        ::grpc::MessageAllocator< ::proto::GetUserByUuidRequest, ::proto::GetUserByUuidResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetUserByUuidRequest, ::proto::GetUserByUuidResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserByUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserByName() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetUserByNameRequest, ::proto::GetUserByNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetUserByNameRequest* request, ::proto::GetUserByNameResponse* response) { return this->GetUserByName(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserByName(
        ::grpc::MessageAllocator< ::proto::GetUserByNameRequest, ::proto::GetUserByNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetUserByNameRequest, ::proto::GetUserByNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserByName(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllUser() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllUserRequest, ::proto::GetAllUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllUserRequest* request, ::proto::GetAllUserResponse* response) { return this->GetAllUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllUser(
        ::grpc::MessageAllocator< ::proto::GetAllUserRequest, ::proto::GetAllUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllUserRequest, ::proto::GetAllUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllUser(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UserLogin() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UserLoginRequest, ::proto::UserLoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UserLoginRequest* request, ::proto::UserLoginResponse* response) { return this->UserLogin(context, request, response); }));}
    void SetMessageAllocatorFor_UserLogin(
        ::grpc::MessageAllocator< ::proto::UserLoginRequest, ::proto::UserLoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UserLoginRequest, ::proto::UserLoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UserLogout() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UserLogoutRequest, ::proto::UserLogoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UserLogoutRequest* request, ::proto::UserLogoutResponse* response) { return this->UserLogout(context, request, response); }));}
    void SetMessageAllocatorFor_UserLogout(
        ::grpc::MessageAllocator< ::proto::UserLogoutRequest, ::proto::UserLogoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UserLogoutRequest, ::proto::UserLogoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserLogout(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UserOnlineHeartBeatNotification, ::proto::UserOnlineHeartBeatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UserOnlineHeartBeatNotification* request, ::proto::UserOnlineHeartBeatResponse* response) { return this->UserOnlineHeartBeatNotifications(context, request, response); }));}
    void SetMessageAllocatorFor_UserOnlineHeartBeatNotifications(
        ::grpc::MessageAllocator< ::proto::UserOnlineHeartBeatNotification, ::proto::UserOnlineHeartBeatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UserOnlineHeartBeatNotification, ::proto::UserOnlineHeartBeatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserOnlineHeartBeatNotifications(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetUserPermissionGroupRequest, ::proto::GetUserPermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetUserPermissionGroupRequest* request, ::proto::GetUserPermissionGroupResponse* response) { return this->GetUserPermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserPermissionGroup(
        ::grpc::MessageAllocator< ::proto::GetUserPermissionGroupRequest, ::proto::GetUserPermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetUserPermissionGroupRequest, ::proto::GetUserPermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetPermissionGroupByUuidRequest, ::proto::GetPermissionGroupByUuidResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetPermissionGroupByUuidRequest* request, ::proto::GetPermissionGroupByUuidResponse* response) { return this->GetPermissionGroupByUuid(context, request, response); }));}
    void SetMessageAllocatorFor_GetPermissionGroupByUuid(
        ::grpc::MessageAllocator< ::proto::GetPermissionGroupByUuidRequest, ::proto::GetPermissionGroupByUuidResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetPermissionGroupByUuidRequest, ::proto::GetPermissionGroupByUuidResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionGroupByUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetPermissionGroupByNameRequest, ::proto::GetPermissionGroupByNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetPermissionGroupByNameRequest* request, ::proto::GetPermissionGroupByNameResponse* response) { return this->GetPermissionGroupByName(context, request, response); }));}
    void SetMessageAllocatorFor_GetPermissionGroupByName(
        ::grpc::MessageAllocator< ::proto::GetPermissionGroupByNameRequest, ::proto::GetPermissionGroupByNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetPermissionGroupByNameRequest, ::proto::GetPermissionGroupByNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionGroupByName(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllPermissionGroupRequest, ::proto::GetAllPermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllPermissionGroupRequest* request, ::proto::GetAllPermissionGroupResponse* response) { return this->GetAllPermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllPermissionGroup(
        ::grpc::MessageAllocator< ::proto::GetAllPermissionGroupRequest, ::proto::GetAllPermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllPermissionGroupRequest, ::proto::GetAllPermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::ChangeUserPermissionGroupRequest, ::proto::ChangeUserPermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::ChangeUserPermissionGroupRequest* request, ::proto::ChangeUserPermissionGroupResponse* response) { return this->ChangeUserPermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_ChangeUserPermissionGroup(
        ::grpc::MessageAllocator< ::proto::ChangeUserPermissionGroupRequest, ::proto::ChangeUserPermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::ChangeUserPermissionGroupRequest, ::proto::ChangeUserPermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeUserPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateProject() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateProjectRequest, ::proto::CreateProjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateProjectRequest* request, ::proto::CreateProjectResponse* response) { return this->CreateProject(context, request, response); }));}
    void SetMessageAllocatorFor_CreateProject(
        ::grpc::MessageAllocator< ::proto::CreateProjectRequest, ::proto::CreateProjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateProjectRequest, ::proto::CreateProjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProject(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteProject() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteProjectRequest, ::proto::DeleteProjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteProjectRequest* request, ::proto::DeleteProjectResponse* response) { return this->DeleteProject(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteProject(
        ::grpc::MessageAllocator< ::proto::DeleteProjectRequest, ::proto::DeleteProjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteProjectRequest, ::proto::DeleteProjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProject(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateProject() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateProjectRequest, ::proto::UpdateProjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateProjectRequest* request, ::proto::UpdateProjectResponse* response) { return this->UpdateProject(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateProject(
        ::grpc::MessageAllocator< ::proto::UpdateProjectRequest, ::proto::UpdateProjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateProjectRequest, ::proto::UpdateProjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProject(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProject() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetProjectRequest, ::proto::GetProjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetProjectRequest* request, ::proto::GetProjectResponse* response) { return this->GetProject(context, request, response); }));}
    void SetMessageAllocatorFor_GetProject(
        ::grpc::MessageAllocator< ::proto::GetProjectRequest, ::proto::GetProjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetProjectRequest, ::proto::GetProjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProject(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllProject() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllProjectRequest, ::proto::GetAllProjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllProjectRequest* request, ::proto::GetAllProjectResponse* response) { return this->GetAllProject(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllProject(
        ::grpc::MessageAllocator< ::proto::GetAllProjectRequest, ::proto::GetAllProjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllProjectRequest, ::proto::GetAllProjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllProject(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwc() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcRequest, ::proto::CreateSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcRequest* request, ::proto::CreateSwcResponse* response) { return this->CreateSwc(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwc(
        ::grpc::MessageAllocator< ::proto::CreateSwcRequest, ::proto::CreateSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcRequest, ::proto::CreateSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcRequest, ::proto::DeleteSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteSwcRequest* request, ::proto::DeleteSwcResponse* response) { return this->DeleteSwc(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSwc(
        ::grpc::MessageAllocator< ::proto::DeleteSwcRequest, ::proto::DeleteSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcRequest, ::proto::DeleteSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcRequest, ::proto::UpdateSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcRequest* request, ::proto::UpdateSwcResponse* response) { return this->UpdateSwc(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwc(
        ::grpc::MessageAllocator< ::proto::UpdateSwcRequest, ::proto::UpdateSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcRequest, ::proto::UpdateSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcMetaInfoRequest, ::proto::GetSwcMetaInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcMetaInfoRequest* request, ::proto::GetSwcMetaInfoResponse* response) { return this->GetSwcMetaInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcMetaInfo(
        ::grpc::MessageAllocator< ::proto::GetSwcMetaInfoRequest, ::proto::GetSwcMetaInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcMetaInfoRequest, ::proto::GetSwcMetaInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllSwcMetaInfoRequest, ::proto::GetAllSwcMetaInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllSwcMetaInfoRequest* request, ::proto::GetAllSwcMetaInfoResponse* response) { return this->GetAllSwcMetaInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllSwcMetaInfo(
        ::grpc::MessageAllocator< ::proto::GetAllSwcMetaInfoRequest, ::proto::GetAllSwcMetaInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllSwcMetaInfoRequest, ::proto::GetAllSwcMetaInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllSwcMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcSnapshotRequest, ::proto::CreateSwcSnapshotResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcSnapshotRequest* request, ::proto::CreateSwcSnapshotResponse* response) { return this->CreateSwcSnapshot(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwcSnapshot(
        ::grpc::MessageAllocator< ::proto::CreateSwcSnapshotRequest, ::proto::CreateSwcSnapshotResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcSnapshotRequest, ::proto::CreateSwcSnapshotResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcSnapshot(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllSnapshotMetaInfoRequest, ::proto::GetAllSnapshotMetaInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllSnapshotMetaInfoRequest* request, ::proto::GetAllSnapshotMetaInfoResponse* response) { return this->GetAllSnapshotMetaInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllSnapshotMetaInfo(
        ::grpc::MessageAllocator< ::proto::GetAllSnapshotMetaInfoRequest, ::proto::GetAllSnapshotMetaInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllSnapshotMetaInfoRequest, ::proto::GetAllSnapshotMetaInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllSnapshotMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSnapshotRequest, ::proto::GetSnapshotResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSnapshotRequest* request, ::proto::GetSnapshotResponse* response) { return this->GetSnapshot(context, request, response); }));}
    void SetMessageAllocatorFor_GetSnapshot(
        ::grpc::MessageAllocator< ::proto::GetSnapshotRequest, ::proto::GetSnapshotResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSnapshotRequest, ::proto::GetSnapshotResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSnapshot(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllIncrementOperationMetaInfoRequest, ::proto::GetAllIncrementOperationMetaInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllIncrementOperationMetaInfoRequest* request, ::proto::GetAllIncrementOperationMetaInfoResponse* response) { return this->GetAllIncrementOperationMetaInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllIncrementOperationMetaInfo(
        ::grpc::MessageAllocator< ::proto::GetAllIncrementOperationMetaInfoRequest, ::proto::GetAllIncrementOperationMetaInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllIncrementOperationMetaInfoRequest, ::proto::GetAllIncrementOperationMetaInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllIncrementOperationMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetIncrementOperationRequest, ::proto::GetIncrementOperationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetIncrementOperationRequest* request, ::proto::GetIncrementOperationResponse* response) { return this->GetIncrementOperation(context, request, response); }));}
    void SetMessageAllocatorFor_GetIncrementOperation(
        ::grpc::MessageAllocator< ::proto::GetIncrementOperationRequest, ::proto::GetIncrementOperationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetIncrementOperationRequest, ::proto::GetIncrementOperationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIncrementOperation(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcNodeDataRequest, ::proto::CreateSwcNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcNodeDataRequest* request, ::proto::CreateSwcNodeDataResponse* response) { return this->CreateSwcNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwcNodeData(
        ::grpc::MessageAllocator< ::proto::CreateSwcNodeDataRequest, ::proto::CreateSwcNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcNodeDataRequest, ::proto::CreateSwcNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcNodeDataRequest, ::proto::DeleteSwcNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteSwcNodeDataRequest* request, ::proto::DeleteSwcNodeDataResponse* response) { return this->DeleteSwcNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSwcNodeData(
        ::grpc::MessageAllocator< ::proto::DeleteSwcNodeDataRequest, ::proto::DeleteSwcNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcNodeDataRequest, ::proto::DeleteSwcNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcNodeDataRequest, ::proto::UpdateSwcNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcNodeDataRequest* request, ::proto::UpdateSwcNodeDataResponse* response) { return this->UpdateSwcNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwcNodeData(
        ::grpc::MessageAllocator< ::proto::UpdateSwcNodeDataRequest, ::proto::UpdateSwcNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcNodeDataRequest, ::proto::UpdateSwcNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcNodeDataRequest, ::proto::GetSwcNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcNodeDataRequest* request, ::proto::GetSwcNodeDataResponse* response) { return this->GetSwcNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcNodeData(
        ::grpc::MessageAllocator< ::proto::GetSwcNodeDataRequest, ::proto::GetSwcNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcNodeDataRequest, ::proto::GetSwcNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcFullNodeDataRequest, ::proto::GetSwcFullNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcFullNodeDataRequest* request, ::proto::GetSwcFullNodeDataResponse* response) { return this->GetSwcFullNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcFullNodeData(
        ::grpc::MessageAllocator< ::proto::GetSwcFullNodeDataRequest, ::proto::GetSwcFullNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcFullNodeDataRequest, ::proto::GetSwcFullNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcFullNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcNodeDataListByTimeAndUserRequest, ::proto::GetSwcNodeDataListByTimeAndUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* request, ::proto::GetSwcNodeDataListByTimeAndUserResponse* response) { return this->GetSwcNodeDataListByTimeAndUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcNodeDataListByTimeAndUser(
        ::grpc::MessageAllocator< ::proto::GetSwcNodeDataListByTimeAndUserRequest, ::proto::GetSwcNodeDataListByTimeAndUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcNodeDataListByTimeAndUserRequest, ::proto::GetSwcNodeDataListByTimeAndUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcNodeDataListByTimeAndUser(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateDailyStatisticsRequest, ::proto::CreateDailyStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateDailyStatisticsRequest* request, ::proto::CreateDailyStatisticsResponse* response) { return this->CreateDailyStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDailyStatistics(
        ::grpc::MessageAllocator< ::proto::CreateDailyStatisticsRequest, ::proto::CreateDailyStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateDailyStatisticsRequest, ::proto::CreateDailyStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteDailyStatisticsRequest, ::proto::DeleteDailyStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteDailyStatisticsRequest* request, ::proto::DeleteDailyStatisticsResponse* response) { return this->DeleteDailyStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDailyStatistics(
        ::grpc::MessageAllocator< ::proto::DeleteDailyStatisticsRequest, ::proto::DeleteDailyStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteDailyStatisticsRequest, ::proto::DeleteDailyStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateDailyStatisticsRequest, ::proto::UpdateDailyStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateDailyStatisticsRequest* request, ::proto::UpdateDailyStatisticsResponse* response) { return this->UpdateDailyStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateDailyStatistics(
        ::grpc::MessageAllocator< ::proto::UpdateDailyStatisticsRequest, ::proto::UpdateDailyStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateDailyStatisticsRequest, ::proto::UpdateDailyStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetDailyStatisticsRequest, ::proto::GetDailyStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetDailyStatisticsRequest* request, ::proto::GetDailyStatisticsResponse* response) { return this->GetDailyStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_GetDailyStatistics(
        ::grpc::MessageAllocator< ::proto::GetDailyStatisticsRequest, ::proto::GetDailyStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetDailyStatisticsRequest, ::proto::GetDailyStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetAllDailyStatisticsRequest, ::proto::GetAllDailyStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetAllDailyStatisticsRequest* request, ::proto::GetAllDailyStatisticsResponse* response) { return this->GetAllDailyStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllDailyStatistics(
        ::grpc::MessageAllocator< ::proto::GetAllDailyStatisticsRequest, ::proto::GetAllDailyStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetAllDailyStatisticsRequest, ::proto::GetAllDailyStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentAnoRequest, ::proto::CreateSwcAttachmentAnoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcAttachmentAnoRequest* request, ::proto::CreateSwcAttachmentAnoResponse* response) { return this->CreateSwcAttachmentAno(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwcAttachmentAno(
        ::grpc::MessageAllocator< ::proto::CreateSwcAttachmentAnoRequest, ::proto::CreateSwcAttachmentAnoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentAnoRequest, ::proto::CreateSwcAttachmentAnoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentAnoRequest, ::proto::DeleteSwcAttachmentAnoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteSwcAttachmentAnoRequest* request, ::proto::DeleteSwcAttachmentAnoResponse* response) { return this->DeleteSwcAttachmentAno(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSwcAttachmentAno(
        ::grpc::MessageAllocator< ::proto::DeleteSwcAttachmentAnoRequest, ::proto::DeleteSwcAttachmentAnoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentAnoRequest, ::proto::DeleteSwcAttachmentAnoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentAnoRequest, ::proto::UpdateSwcAttachmentAnoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcAttachmentAnoRequest* request, ::proto::UpdateSwcAttachmentAnoResponse* response) { return this->UpdateSwcAttachmentAno(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwcAttachmentAno(
        ::grpc::MessageAllocator< ::proto::UpdateSwcAttachmentAnoRequest, ::proto::UpdateSwcAttachmentAnoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentAnoRequest, ::proto::UpdateSwcAttachmentAnoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentAnoRequest, ::proto::GetSwcAttachmentAnoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcAttachmentAnoRequest* request, ::proto::GetSwcAttachmentAnoResponse* response) { return this->GetSwcAttachmentAno(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcAttachmentAno(
        ::grpc::MessageAllocator< ::proto::GetSwcAttachmentAnoRequest, ::proto::GetSwcAttachmentAnoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentAnoRequest, ::proto::GetSwcAttachmentAnoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentApoRequest, ::proto::CreateSwcAttachmentApoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcAttachmentApoRequest* request, ::proto::CreateSwcAttachmentApoResponse* response) { return this->CreateSwcAttachmentApo(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwcAttachmentApo(
        ::grpc::MessageAllocator< ::proto::CreateSwcAttachmentApoRequest, ::proto::CreateSwcAttachmentApoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentApoRequest, ::proto::CreateSwcAttachmentApoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentApoRequest, ::proto::DeleteSwcAttachmentApoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteSwcAttachmentApoRequest* request, ::proto::DeleteSwcAttachmentApoResponse* response) { return this->DeleteSwcAttachmentApo(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSwcAttachmentApo(
        ::grpc::MessageAllocator< ::proto::DeleteSwcAttachmentApoRequest, ::proto::DeleteSwcAttachmentApoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentApoRequest, ::proto::DeleteSwcAttachmentApoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentApoRequest, ::proto::UpdateSwcAttachmentApoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcAttachmentApoRequest* request, ::proto::UpdateSwcAttachmentApoResponse* response) { return this->UpdateSwcAttachmentApo(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwcAttachmentApo(
        ::grpc::MessageAllocator< ::proto::UpdateSwcAttachmentApoRequest, ::proto::UpdateSwcAttachmentApoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentApoRequest, ::proto::UpdateSwcAttachmentApoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentApoRequest, ::proto::GetSwcAttachmentApoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcAttachmentApoRequest* request, ::proto::GetSwcAttachmentApoResponse* response) { return this->GetSwcAttachmentApo(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcAttachmentApo(
        ::grpc::MessageAllocator< ::proto::GetSwcAttachmentApoRequest, ::proto::GetSwcAttachmentApoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentApoRequest, ::proto::GetSwcAttachmentApoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::RevertSwcVersionRequest, ::proto::RevertSwcVersionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::RevertSwcVersionRequest* request, ::proto::RevertSwcVersionResponse* response) { return this->RevertSwcVersion(context, request, response); }));}
    void SetMessageAllocatorFor_RevertSwcVersion(
        ::grpc::MessageAllocator< ::proto::RevertSwcVersionRequest, ::proto::RevertSwcVersionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::RevertSwcVersionRequest, ::proto::RevertSwcVersionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RevertSwcVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentSwcRequest, ::proto::CreateSwcAttachmentSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreateSwcAttachmentSwcRequest* request, ::proto::CreateSwcAttachmentSwcResponse* response) { return this->CreateSwcAttachmentSwc(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSwcAttachmentSwc(
        ::grpc::MessageAllocator< ::proto::CreateSwcAttachmentSwcRequest, ::proto::CreateSwcAttachmentSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreateSwcAttachmentSwcRequest, ::proto::CreateSwcAttachmentSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentSwcRequest, ::proto::DeleteSwcAttachmentSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeleteSwcAttachmentSwcRequest* request, ::proto::DeleteSwcAttachmentSwcResponse* response) { return this->DeleteSwcAttachmentSwc(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSwcAttachmentSwc(
        ::grpc::MessageAllocator< ::proto::DeleteSwcAttachmentSwcRequest, ::proto::DeleteSwcAttachmentSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeleteSwcAttachmentSwcRequest, ::proto::DeleteSwcAttachmentSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentSwcRequest, ::proto::UpdateSwcAttachmentSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcAttachmentSwcRequest* request, ::proto::UpdateSwcAttachmentSwcResponse* response) { return this->UpdateSwcAttachmentSwc(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwcAttachmentSwc(
        ::grpc::MessageAllocator< ::proto::UpdateSwcAttachmentSwcRequest, ::proto::UpdateSwcAttachmentSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcAttachmentSwcRequest, ::proto::UpdateSwcAttachmentSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentSwcRequest, ::proto::GetSwcAttachmentSwcResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetSwcAttachmentSwcRequest* request, ::proto::GetSwcAttachmentSwcResponse* response) { return this->GetSwcAttachmentSwc(context, request, response); }));}
    void SetMessageAllocatorFor_GetSwcAttachmentSwc(
        ::grpc::MessageAllocator< ::proto::GetSwcAttachmentSwcRequest, ::proto::GetSwcAttachmentSwcResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetSwcAttachmentSwcRequest, ::proto::GetSwcAttachmentSwcResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::CreatePermissionGroupRequest, ::proto::CreatePermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::CreatePermissionGroupRequest* request, ::proto::CreatePermissionGroupResponse* response) { return this->CreatePermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_CreatePermissionGroup(
        ::grpc::MessageAllocator< ::proto::CreatePermissionGroupRequest, ::proto::CreatePermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::CreatePermissionGroupRequest, ::proto::CreatePermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreatePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::DeletePermissionGroupRequest, ::proto::DeletePermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::DeletePermissionGroupRequest* request, ::proto::DeletePermissionGroupResponse* response) { return this->DeletePermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_DeletePermissionGroup(
        ::grpc::MessageAllocator< ::proto::DeletePermissionGroupRequest, ::proto::DeletePermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::DeletePermissionGroupRequest, ::proto::DeletePermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdatePermissionGroupRequest, ::proto::UpdatePermissionGroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdatePermissionGroupRequest* request, ::proto::UpdatePermissionGroupResponse* response) { return this->UpdatePermissionGroup(context, request, response); }));}
    void SetMessageAllocatorFor_UpdatePermissionGroup(
        ::grpc::MessageAllocator< ::proto::UpdatePermissionGroupRequest, ::proto::UpdatePermissionGroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdatePermissionGroupRequest, ::proto::UpdatePermissionGroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdatePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::GetProjectSwcNamesByProjectUuidRequest, ::proto::GetProjectSwcNamesByProjectUuidResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::GetProjectSwcNamesByProjectUuidRequest* request, ::proto::GetProjectSwcNamesByProjectUuidResponse* response) { return this->GetProjectSwcNamesByProjectUuid(context, request, response); }));}
    void SetMessageAllocatorFor_GetProjectSwcNamesByProjectUuid(
        ::grpc::MessageAllocator< ::proto::GetProjectSwcNamesByProjectUuidRequest, ::proto::GetProjectSwcNamesByProjectUuidResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(56);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::GetProjectSwcNamesByProjectUuidRequest, ::proto::GetProjectSwcNamesByProjectUuidResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProjectSwcNamesByProjectUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcNParentInfoRequest, ::proto::UpdateSwcNParentInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::UpdateSwcNParentInfoRequest* request, ::proto::UpdateSwcNParentInfoResponse* response) { return this->UpdateSwcNParentInfo(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSwcNParentInfo(
        ::grpc::MessageAllocator< ::proto::UpdateSwcNParentInfoRequest, ::proto::UpdateSwcNParentInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(57);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::UpdateSwcNParentInfoRequest, ::proto::UpdateSwcNParentInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcNParentInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::ClearAllNodesRequest, ::proto::ClearAllNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::ClearAllNodesRequest* request, ::proto::ClearAllNodesResponse* response) { return this->ClearAllNodes(context, request, response); }));}
    void SetMessageAllocatorFor_ClearAllNodes(
        ::grpc::MessageAllocator< ::proto::ClearAllNodesRequest, ::proto::ClearAllNodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(58);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::ClearAllNodesRequest, ::proto::ClearAllNodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearAllNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::proto::OverwriteSwcNodeDataRequest, ::proto::OverwriteSwcNodeDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::proto::OverwriteSwcNodeDataRequest* request, ::proto::OverwriteSwcNodeDataResponse* response) { return this->OverwriteSwcNodeData(context, request, response); }));}
    void SetMessageAllocatorFor_OverwriteSwcNodeData(
        ::grpc::MessageAllocator< ::proto::OverwriteSwcNodeDataRequest, ::proto::OverwriteSwcNodeDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(59);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::proto::OverwriteSwcNodeDataRequest, ::proto::OverwriteSwcNodeDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* OverwriteSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateUser<WithCallbackMethod_DeleteUser<WithCallbackMethod_UpdateUser<WithCallbackMethod_GetUserByUuid<WithCallbackMethod_GetUserByName<WithCallbackMethod_GetAllUser<WithCallbackMethod_UserLogin<WithCallbackMethod_UserLogout<WithCallbackMethod_UserOnlineHeartBeatNotifications<WithCallbackMethod_GetUserPermissionGroup<WithCallbackMethod_GetPermissionGroupByUuid<WithCallbackMethod_GetPermissionGroupByName<WithCallbackMethod_GetAllPermissionGroup<WithCallbackMethod_ChangeUserPermissionGroup<WithCallbackMethod_CreateProject<WithCallbackMethod_DeleteProject<WithCallbackMethod_UpdateProject<WithCallbackMethod_GetProject<WithCallbackMethod_GetAllProject<WithCallbackMethod_CreateSwc<WithCallbackMethod_DeleteSwc<WithCallbackMethod_UpdateSwc<WithCallbackMethod_GetSwcMetaInfo<WithCallbackMethod_GetAllSwcMetaInfo<WithCallbackMethod_CreateSwcSnapshot<WithCallbackMethod_GetAllSnapshotMetaInfo<WithCallbackMethod_GetSnapshot<WithCallbackMethod_GetAllIncrementOperationMetaInfo<WithCallbackMethod_GetIncrementOperation<WithCallbackMethod_CreateSwcNodeData<WithCallbackMethod_DeleteSwcNodeData<WithCallbackMethod_UpdateSwcNodeData<WithCallbackMethod_GetSwcNodeData<WithCallbackMethod_GetSwcFullNodeData<WithCallbackMethod_GetSwcNodeDataListByTimeAndUser<WithCallbackMethod_CreateDailyStatistics<WithCallbackMethod_DeleteDailyStatistics<WithCallbackMethod_UpdateDailyStatistics<WithCallbackMethod_GetDailyStatistics<WithCallbackMethod_GetAllDailyStatistics<WithCallbackMethod_CreateSwcAttachmentAno<WithCallbackMethod_DeleteSwcAttachmentAno<WithCallbackMethod_UpdateSwcAttachmentAno<WithCallbackMethod_GetSwcAttachmentAno<WithCallbackMethod_CreateSwcAttachmentApo<WithCallbackMethod_DeleteSwcAttachmentApo<WithCallbackMethod_UpdateSwcAttachmentApo<WithCallbackMethod_GetSwcAttachmentApo<WithCallbackMethod_RevertSwcVersion<WithCallbackMethod_CreateSwcAttachmentSwc<WithCallbackMethod_DeleteSwcAttachmentSwc<WithCallbackMethod_UpdateSwcAttachmentSwc<WithCallbackMethod_GetSwcAttachmentSwc<WithCallbackMethod_CreatePermissionGroup<WithCallbackMethod_DeletePermissionGroup<WithCallbackMethod_UpdatePermissionGroup<WithCallbackMethod_GetProjectSwcNamesByProjectUuid<WithCallbackMethod_UpdateSwcNParentInfo<WithCallbackMethod_ClearAllNodes<WithCallbackMethod_OverwriteSwcNodeData<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserByName() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllUser() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UserLogin() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UserLogout() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateProject() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteProject() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateProject() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProject() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllProject() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwc() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodGeneric(58);
    }
    ~WithGenericMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodGeneric(59);
    }
    ~WithGenericMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserByUuid(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserByName() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllUser() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UserLogin() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UserLogout() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserLogout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUserOnlineHeartBeatNotifications(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserPermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionGroupByUuid(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPermissionGroupByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllPermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeUserPermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateProject() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteProject() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateProject() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProject() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllProject() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllProject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwc() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcMetaInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllSwcMetaInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcSnapshot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllSnapshotMetaInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSnapshot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllIncrementOperationMetaInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIncrementOperation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcFullNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDailyStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDailyStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDailyStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDailyStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDailyStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRevertSwcVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeletePermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdatePermissionGroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProjectSwcNamesByProjectUuid(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSwcNParentInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodRaw(58);
    }
    ~WithRawMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearAllNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodRaw(59);
    }
    ~WithRawMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOverwriteSwcNodeData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateUser() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteUser() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserByUuid(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserByUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserByName() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllUser() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UserLogin() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UserLogin(context, request, response); }));
    }
    ~WithRawCallbackMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UserLogout() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UserLogout(context, request, response); }));
    }
    ~WithRawCallbackMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserLogout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UserOnlineHeartBeatNotifications(context, request, response); }));
    }
    ~WithRawCallbackMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UserOnlineHeartBeatNotifications(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserPermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPermissionGroupByUuid(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionGroupByUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPermissionGroupByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPermissionGroupByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllPermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangeUserPermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangeUserPermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateProject() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateProject(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteProject() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteProject(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteProject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateProject() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateProject(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProject() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProject(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllProject() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllProject(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllProject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwc() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcMetaInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllSwcMetaInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllSwcMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwcSnapshot(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcSnapshot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllSnapshotMetaInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllSnapshotMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSnapshot(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSnapshot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllIncrementOperationMetaInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllIncrementOperationMetaInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetIncrementOperation(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetIncrementOperation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwcNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSwcNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwcNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcFullNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcFullNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcNodeDataListByTimeAndUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcNodeDataListByTimeAndUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDailyStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDailyStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateDailyStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDailyStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllDailyStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAllDailyStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwcAttachmentAno(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSwcAttachmentAno(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwcAttachmentAno(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodRawCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcAttachmentAno(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentAno(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRawCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwcAttachmentApo(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRawCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSwcAttachmentApo(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRawCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwcAttachmentApo(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodRawCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcAttachmentApo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentApo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodRawCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RevertSwcVersion(context, request, response); }));
    }
    ~WithRawCallbackMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RevertSwcVersion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRawCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSwcAttachmentSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRawCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSwcAttachmentSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRawCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwcAttachmentSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodRawCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSwcAttachmentSwc(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSwcAttachmentSwc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreatePermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreatePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeletePermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeletePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodRawCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdatePermissionGroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdatePermissionGroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodRawCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetProjectSwcNamesByProjectUuid(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProjectSwcNamesByProjectUuid(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodRawCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSwcNParentInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSwcNParentInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodRawCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearAllNodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearAllNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodRawCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OverwriteSwcNodeData(context, request, response); }));
    }
    ~WithRawCallbackMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* OverwriteSwcNodeData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateUserRequest, ::proto::CreateUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateUserRequest, ::proto::CreateUserResponse>* streamer) {
                       return this->StreamedCreateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* /*context*/, const ::proto::CreateUserRequest* /*request*/, ::proto::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateUserRequest,::proto::CreateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteUserRequest, ::proto::DeleteUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteUserRequest, ::proto::DeleteUserResponse>* streamer) {
                       return this->StreamedDeleteUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* /*context*/, const ::proto::DeleteUserRequest* /*request*/, ::proto::DeleteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteUserRequest,::proto::DeleteUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateUserRequest, ::proto::UpdateUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateUserRequest, ::proto::UpdateUserResponse>* streamer) {
                       return this->StreamedUpdateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::proto::UpdateUserRequest* /*request*/, ::proto::UpdateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateUserRequest,::proto::UpdateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserByUuid() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetUserByUuidRequest, ::proto::GetUserByUuidResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetUserByUuidRequest, ::proto::GetUserByUuidResponse>* streamer) {
                       return this->StreamedGetUserByUuid(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetUserByUuidRequest* /*request*/, ::proto::GetUserByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserByUuid(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetUserByUuidRequest,::proto::GetUserByUuidResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserByName() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetUserByNameRequest, ::proto::GetUserByNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetUserByNameRequest, ::proto::GetUserByNameResponse>* streamer) {
                       return this->StreamedGetUserByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserByName(::grpc::ServerContext* /*context*/, const ::proto::GetUserByNameRequest* /*request*/, ::proto::GetUserByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetUserByNameRequest,::proto::GetUserByNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllUser() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllUserRequest, ::proto::GetAllUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllUserRequest, ::proto::GetAllUserResponse>* streamer) {
                       return this->StreamedGetAllUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllUser(::grpc::ServerContext* /*context*/, const ::proto::GetAllUserRequest* /*request*/, ::proto::GetAllUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllUserRequest,::proto::GetAllUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UserLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UserLogin() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UserLoginRequest, ::proto::UserLoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UserLoginRequest, ::proto::UserLoginResponse>* streamer) {
                       return this->StreamedUserLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UserLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UserLogin(::grpc::ServerContext* /*context*/, const ::proto::UserLoginRequest* /*request*/, ::proto::UserLoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUserLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UserLoginRequest,::proto::UserLoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UserLogout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UserLogout() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UserLogoutRequest, ::proto::UserLogoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UserLogoutRequest, ::proto::UserLogoutResponse>* streamer) {
                       return this->StreamedUserLogout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UserLogout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UserLogout(::grpc::ServerContext* /*context*/, const ::proto::UserLogoutRequest* /*request*/, ::proto::UserLogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUserLogout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UserLogoutRequest,::proto::UserLogoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UserOnlineHeartBeatNotifications : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UserOnlineHeartBeatNotifications() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UserOnlineHeartBeatNotification, ::proto::UserOnlineHeartBeatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UserOnlineHeartBeatNotification, ::proto::UserOnlineHeartBeatResponse>* streamer) {
                       return this->StreamedUserOnlineHeartBeatNotifications(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UserOnlineHeartBeatNotifications() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UserOnlineHeartBeatNotifications(::grpc::ServerContext* /*context*/, const ::proto::UserOnlineHeartBeatNotification* /*request*/, ::proto::UserOnlineHeartBeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUserOnlineHeartBeatNotifications(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UserOnlineHeartBeatNotification,::proto::UserOnlineHeartBeatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserPermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetUserPermissionGroupRequest, ::proto::GetUserPermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetUserPermissionGroupRequest, ::proto::GetUserPermissionGroupResponse>* streamer) {
                       return this->StreamedGetUserPermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetUserPermissionGroupRequest* /*request*/, ::proto::GetUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserPermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetUserPermissionGroupRequest,::proto::GetUserPermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPermissionGroupByUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPermissionGroupByUuid() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetPermissionGroupByUuidRequest, ::proto::GetPermissionGroupByUuidResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetPermissionGroupByUuidRequest, ::proto::GetPermissionGroupByUuidResponse>* streamer) {
                       return this->StreamedGetPermissionGroupByUuid(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPermissionGroupByUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPermissionGroupByUuid(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByUuidRequest* /*request*/, ::proto::GetPermissionGroupByUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPermissionGroupByUuid(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetPermissionGroupByUuidRequest,::proto::GetPermissionGroupByUuidResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPermissionGroupByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPermissionGroupByName() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetPermissionGroupByNameRequest, ::proto::GetPermissionGroupByNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetPermissionGroupByNameRequest, ::proto::GetPermissionGroupByNameResponse>* streamer) {
                       return this->StreamedGetPermissionGroupByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPermissionGroupByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPermissionGroupByName(::grpc::ServerContext* /*context*/, const ::proto::GetPermissionGroupByNameRequest* /*request*/, ::proto::GetPermissionGroupByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPermissionGroupByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetPermissionGroupByNameRequest,::proto::GetPermissionGroupByNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllPermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllPermissionGroupRequest, ::proto::GetAllPermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllPermissionGroupRequest, ::proto::GetAllPermissionGroupResponse>* streamer) {
                       return this->StreamedGetAllPermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::GetAllPermissionGroupRequest* /*request*/, ::proto::GetAllPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllPermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllPermissionGroupRequest,::proto::GetAllPermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangeUserPermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangeUserPermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::ChangeUserPermissionGroupRequest, ::proto::ChangeUserPermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::ChangeUserPermissionGroupRequest, ::proto::ChangeUserPermissionGroupResponse>* streamer) {
                       return this->StreamedChangeUserPermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangeUserPermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangeUserPermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::ChangeUserPermissionGroupRequest* /*request*/, ::proto::ChangeUserPermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangeUserPermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ChangeUserPermissionGroupRequest,::proto::ChangeUserPermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateProject() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateProjectRequest, ::proto::CreateProjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateProjectRequest, ::proto::CreateProjectResponse>* streamer) {
                       return this->StreamedCreateProject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateProject(::grpc::ServerContext* /*context*/, const ::proto::CreateProjectRequest* /*request*/, ::proto::CreateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateProjectRequest,::proto::CreateProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteProject() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteProjectRequest, ::proto::DeleteProjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteProjectRequest, ::proto::DeleteProjectResponse>* streamer) {
                       return this->StreamedDeleteProject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteProject(::grpc::ServerContext* /*context*/, const ::proto::DeleteProjectRequest* /*request*/, ::proto::DeleteProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteProjectRequest,::proto::DeleteProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateProject() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateProjectRequest, ::proto::UpdateProjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateProjectRequest, ::proto::UpdateProjectResponse>* streamer) {
                       return this->StreamedUpdateProject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateProject(::grpc::ServerContext* /*context*/, const ::proto::UpdateProjectRequest* /*request*/, ::proto::UpdateProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateProjectRequest,::proto::UpdateProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProject() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetProjectRequest, ::proto::GetProjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetProjectRequest, ::proto::GetProjectResponse>* streamer) {
                       return this->StreamedGetProject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProject(::grpc::ServerContext* /*context*/, const ::proto::GetProjectRequest* /*request*/, ::proto::GetProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetProjectRequest,::proto::GetProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllProject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllProject() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllProjectRequest, ::proto::GetAllProjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllProjectRequest, ::proto::GetAllProjectResponse>* streamer) {
                       return this->StreamedGetAllProject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllProject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllProject(::grpc::ServerContext* /*context*/, const ::proto::GetAllProjectRequest* /*request*/, ::proto::GetAllProjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllProject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllProjectRequest,::proto::GetAllProjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwc() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcRequest, ::proto::CreateSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcRequest, ::proto::CreateSwcResponse>* streamer) {
                       return this->StreamedCreateSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcRequest* /*request*/, ::proto::CreateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcRequest,::proto::CreateSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSwc() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteSwcRequest, ::proto::DeleteSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteSwcRequest, ::proto::DeleteSwcResponse>* streamer) {
                       return this->StreamedDeleteSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcRequest* /*request*/, ::proto::DeleteSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteSwcRequest,::proto::DeleteSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwc() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcRequest, ::proto::UpdateSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcRequest, ::proto::UpdateSwcResponse>* streamer) {
                       return this->StreamedUpdateSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcRequest* /*request*/, ::proto::UpdateSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcRequest,::proto::UpdateSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcMetaInfo() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcMetaInfoRequest, ::proto::GetSwcMetaInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcMetaInfoRequest, ::proto::GetSwcMetaInfoResponse>* streamer) {
                       return this->StreamedGetSwcMetaInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcMetaInfoRequest* /*request*/, ::proto::GetSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcMetaInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcMetaInfoRequest,::proto::GetSwcMetaInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllSwcMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllSwcMetaInfo() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllSwcMetaInfoRequest, ::proto::GetAllSwcMetaInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllSwcMetaInfoRequest, ::proto::GetAllSwcMetaInfoResponse>* streamer) {
                       return this->StreamedGetAllSwcMetaInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllSwcMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllSwcMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSwcMetaInfoRequest* /*request*/, ::proto::GetAllSwcMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllSwcMetaInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllSwcMetaInfoRequest,::proto::GetAllSwcMetaInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwcSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwcSnapshot() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcSnapshotRequest, ::proto::CreateSwcSnapshotResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcSnapshotRequest, ::proto::CreateSwcSnapshotResponse>* streamer) {
                       return this->StreamedCreateSwcSnapshot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwcSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwcSnapshot(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcSnapshotRequest* /*request*/, ::proto::CreateSwcSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwcSnapshot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcSnapshotRequest,::proto::CreateSwcSnapshotResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllSnapshotMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllSnapshotMetaInfo() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllSnapshotMetaInfoRequest, ::proto::GetAllSnapshotMetaInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllSnapshotMetaInfoRequest, ::proto::GetAllSnapshotMetaInfoResponse>* streamer) {
                       return this->StreamedGetAllSnapshotMetaInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllSnapshotMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllSnapshotMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllSnapshotMetaInfoRequest* /*request*/, ::proto::GetAllSnapshotMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllSnapshotMetaInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllSnapshotMetaInfoRequest,::proto::GetAllSnapshotMetaInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSnapshot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSnapshot() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSnapshotRequest, ::proto::GetSnapshotResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSnapshotRequest, ::proto::GetSnapshotResponse>* streamer) {
                       return this->StreamedGetSnapshot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSnapshot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSnapshot(::grpc::ServerContext* /*context*/, const ::proto::GetSnapshotRequest* /*request*/, ::proto::GetSnapshotResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSnapshot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSnapshotRequest,::proto::GetSnapshotResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllIncrementOperationMetaInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllIncrementOperationMetaInfo() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllIncrementOperationMetaInfoRequest, ::proto::GetAllIncrementOperationMetaInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllIncrementOperationMetaInfoRequest, ::proto::GetAllIncrementOperationMetaInfoResponse>* streamer) {
                       return this->StreamedGetAllIncrementOperationMetaInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllIncrementOperationMetaInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllIncrementOperationMetaInfo(::grpc::ServerContext* /*context*/, const ::proto::GetAllIncrementOperationMetaInfoRequest* /*request*/, ::proto::GetAllIncrementOperationMetaInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllIncrementOperationMetaInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllIncrementOperationMetaInfoRequest,::proto::GetAllIncrementOperationMetaInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIncrementOperation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetIncrementOperation() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetIncrementOperationRequest, ::proto::GetIncrementOperationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetIncrementOperationRequest, ::proto::GetIncrementOperationResponse>* streamer) {
                       return this->StreamedGetIncrementOperation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetIncrementOperation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIncrementOperation(::grpc::ServerContext* /*context*/, const ::proto::GetIncrementOperationRequest* /*request*/, ::proto::GetIncrementOperationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIncrementOperation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetIncrementOperationRequest,::proto::GetIncrementOperationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwcNodeData() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcNodeDataRequest, ::proto::CreateSwcNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcNodeDataRequest, ::proto::CreateSwcNodeDataResponse>* streamer) {
                       return this->StreamedCreateSwcNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcNodeDataRequest* /*request*/, ::proto::CreateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwcNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcNodeDataRequest,::proto::CreateSwcNodeDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSwcNodeData() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteSwcNodeDataRequest, ::proto::DeleteSwcNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteSwcNodeDataRequest, ::proto::DeleteSwcNodeDataResponse>* streamer) {
                       return this->StreamedDeleteSwcNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcNodeDataRequest* /*request*/, ::proto::DeleteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSwcNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteSwcNodeDataRequest,::proto::DeleteSwcNodeDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwcNodeData() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcNodeDataRequest, ::proto::UpdateSwcNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcNodeDataRequest, ::proto::UpdateSwcNodeDataResponse>* streamer) {
                       return this->StreamedUpdateSwcNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNodeDataRequest* /*request*/, ::proto::UpdateSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwcNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcNodeDataRequest,::proto::UpdateSwcNodeDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcNodeData() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcNodeDataRequest, ::proto::GetSwcNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcNodeDataRequest, ::proto::GetSwcNodeDataResponse>* streamer) {
                       return this->StreamedGetSwcNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataRequest* /*request*/, ::proto::GetSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcNodeDataRequest,::proto::GetSwcNodeDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcFullNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcFullNodeData() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcFullNodeDataRequest, ::proto::GetSwcFullNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcFullNodeDataRequest, ::proto::GetSwcFullNodeDataResponse>* streamer) {
                       return this->StreamedGetSwcFullNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcFullNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcFullNodeData(::grpc::ServerContext* /*context*/, const ::proto::GetSwcFullNodeDataRequest* /*request*/, ::proto::GetSwcFullNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcFullNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcFullNodeDataRequest,::proto::GetSwcFullNodeDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcNodeDataListByTimeAndUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcNodeDataListByTimeAndUser() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcNodeDataListByTimeAndUserRequest, ::proto::GetSwcNodeDataListByTimeAndUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcNodeDataListByTimeAndUserRequest, ::proto::GetSwcNodeDataListByTimeAndUserResponse>* streamer) {
                       return this->StreamedGetSwcNodeDataListByTimeAndUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcNodeDataListByTimeAndUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* /*context*/, const ::proto::GetSwcNodeDataListByTimeAndUserRequest* /*request*/, ::proto::GetSwcNodeDataListByTimeAndUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcNodeDataListByTimeAndUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcNodeDataListByTimeAndUserRequest,::proto::GetSwcNodeDataListByTimeAndUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDailyStatistics() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateDailyStatisticsRequest, ::proto::CreateDailyStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateDailyStatisticsRequest, ::proto::CreateDailyStatisticsResponse>* streamer) {
                       return this->StreamedCreateDailyStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::CreateDailyStatisticsRequest* /*request*/, ::proto::CreateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDailyStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateDailyStatisticsRequest,::proto::CreateDailyStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDailyStatistics() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteDailyStatisticsRequest, ::proto::DeleteDailyStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteDailyStatisticsRequest, ::proto::DeleteDailyStatisticsResponse>* streamer) {
                       return this->StreamedDeleteDailyStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::DeleteDailyStatisticsRequest* /*request*/, ::proto::DeleteDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDailyStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteDailyStatisticsRequest,::proto::DeleteDailyStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateDailyStatistics() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateDailyStatisticsRequest, ::proto::UpdateDailyStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateDailyStatisticsRequest, ::proto::UpdateDailyStatisticsResponse>* streamer) {
                       return this->StreamedUpdateDailyStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::UpdateDailyStatisticsRequest* /*request*/, ::proto::UpdateDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDailyStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateDailyStatisticsRequest,::proto::UpdateDailyStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDailyStatistics() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetDailyStatisticsRequest, ::proto::GetDailyStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetDailyStatisticsRequest, ::proto::GetDailyStatisticsResponse>* streamer) {
                       return this->StreamedGetDailyStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetDailyStatisticsRequest* /*request*/, ::proto::GetDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDailyStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetDailyStatisticsRequest,::proto::GetDailyStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllDailyStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllDailyStatistics() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetAllDailyStatisticsRequest, ::proto::GetAllDailyStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetAllDailyStatisticsRequest, ::proto::GetAllDailyStatisticsResponse>* streamer) {
                       return this->StreamedGetAllDailyStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllDailyStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllDailyStatistics(::grpc::ServerContext* /*context*/, const ::proto::GetAllDailyStatisticsRequest* /*request*/, ::proto::GetAllDailyStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllDailyStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetAllDailyStatisticsRequest,::proto::GetAllDailyStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcAttachmentAnoRequest, ::proto::CreateSwcAttachmentAnoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcAttachmentAnoRequest, ::proto::CreateSwcAttachmentAnoResponse>* streamer) {
                       return this->StreamedCreateSwcAttachmentAno(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentAnoRequest* /*request*/, ::proto::CreateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcAttachmentAnoRequest,::proto::CreateSwcAttachmentAnoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSwcAttachmentAno() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteSwcAttachmentAnoRequest, ::proto::DeleteSwcAttachmentAnoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteSwcAttachmentAnoRequest, ::proto::DeleteSwcAttachmentAnoResponse>* streamer) {
                       return this->StreamedDeleteSwcAttachmentAno(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentAnoRequest* /*request*/, ::proto::DeleteSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteSwcAttachmentAnoRequest,::proto::DeleteSwcAttachmentAnoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwcAttachmentAno() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcAttachmentAnoRequest, ::proto::UpdateSwcAttachmentAnoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcAttachmentAnoRequest, ::proto::UpdateSwcAttachmentAnoResponse>* streamer) {
                       return this->StreamedUpdateSwcAttachmentAno(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentAnoRequest* /*request*/, ::proto::UpdateSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcAttachmentAnoRequest,::proto::UpdateSwcAttachmentAnoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcAttachmentAno : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcAttachmentAno() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcAttachmentAnoRequest, ::proto::GetSwcAttachmentAnoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcAttachmentAnoRequest, ::proto::GetSwcAttachmentAnoResponse>* streamer) {
                       return this->StreamedGetSwcAttachmentAno(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcAttachmentAno() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcAttachmentAno(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentAnoRequest* /*request*/, ::proto::GetSwcAttachmentAnoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcAttachmentAno(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcAttachmentAnoRequest,::proto::GetSwcAttachmentAnoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcAttachmentApoRequest, ::proto::CreateSwcAttachmentApoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcAttachmentApoRequest, ::proto::CreateSwcAttachmentApoResponse>* streamer) {
                       return this->StreamedCreateSwcAttachmentApo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentApoRequest* /*request*/, ::proto::CreateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcAttachmentApoRequest,::proto::CreateSwcAttachmentApoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSwcAttachmentApo() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteSwcAttachmentApoRequest, ::proto::DeleteSwcAttachmentApoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteSwcAttachmentApoRequest, ::proto::DeleteSwcAttachmentApoResponse>* streamer) {
                       return this->StreamedDeleteSwcAttachmentApo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentApoRequest* /*request*/, ::proto::DeleteSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteSwcAttachmentApoRequest,::proto::DeleteSwcAttachmentApoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwcAttachmentApo() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcAttachmentApoRequest, ::proto::UpdateSwcAttachmentApoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcAttachmentApoRequest, ::proto::UpdateSwcAttachmentApoResponse>* streamer) {
                       return this->StreamedUpdateSwcAttachmentApo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentApoRequest* /*request*/, ::proto::UpdateSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcAttachmentApoRequest,::proto::UpdateSwcAttachmentApoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcAttachmentApo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcAttachmentApo() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcAttachmentApoRequest, ::proto::GetSwcAttachmentApoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcAttachmentApoRequest, ::proto::GetSwcAttachmentApoResponse>* streamer) {
                       return this->StreamedGetSwcAttachmentApo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcAttachmentApo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcAttachmentApo(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentApoRequest* /*request*/, ::proto::GetSwcAttachmentApoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcAttachmentApo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcAttachmentApoRequest,::proto::GetSwcAttachmentApoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RevertSwcVersion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RevertSwcVersion() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::RevertSwcVersionRequest, ::proto::RevertSwcVersionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::RevertSwcVersionRequest, ::proto::RevertSwcVersionResponse>* streamer) {
                       return this->StreamedRevertSwcVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RevertSwcVersion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RevertSwcVersion(::grpc::ServerContext* /*context*/, const ::proto::RevertSwcVersionRequest* /*request*/, ::proto::RevertSwcVersionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRevertSwcVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::RevertSwcVersionRequest,::proto::RevertSwcVersionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreateSwcAttachmentSwcRequest, ::proto::CreateSwcAttachmentSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreateSwcAttachmentSwcRequest, ::proto::CreateSwcAttachmentSwcResponse>* streamer) {
                       return this->StreamedCreateSwcAttachmentSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::CreateSwcAttachmentSwcRequest* /*request*/, ::proto::CreateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreateSwcAttachmentSwcRequest,::proto::CreateSwcAttachmentSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeleteSwcAttachmentSwcRequest, ::proto::DeleteSwcAttachmentSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeleteSwcAttachmentSwcRequest, ::proto::DeleteSwcAttachmentSwcResponse>* streamer) {
                       return this->StreamedDeleteSwcAttachmentSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::DeleteSwcAttachmentSwcRequest* /*request*/, ::proto::DeleteSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeleteSwcAttachmentSwcRequest,::proto::DeleteSwcAttachmentSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcAttachmentSwcRequest, ::proto::UpdateSwcAttachmentSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcAttachmentSwcRequest, ::proto::UpdateSwcAttachmentSwcResponse>* streamer) {
                       return this->StreamedUpdateSwcAttachmentSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcAttachmentSwcRequest* /*request*/, ::proto::UpdateSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcAttachmentSwcRequest,::proto::UpdateSwcAttachmentSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSwcAttachmentSwc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSwcAttachmentSwc() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetSwcAttachmentSwcRequest, ::proto::GetSwcAttachmentSwcResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetSwcAttachmentSwcRequest, ::proto::GetSwcAttachmentSwcResponse>* streamer) {
                       return this->StreamedGetSwcAttachmentSwc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSwcAttachmentSwc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSwcAttachmentSwc(::grpc::ServerContext* /*context*/, const ::proto::GetSwcAttachmentSwcRequest* /*request*/, ::proto::GetSwcAttachmentSwcResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSwcAttachmentSwc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetSwcAttachmentSwcRequest,::proto::GetSwcAttachmentSwcResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreatePermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::CreatePermissionGroupRequest, ::proto::CreatePermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::CreatePermissionGroupRequest, ::proto::CreatePermissionGroupResponse>* streamer) {
                       return this->StreamedCreatePermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::CreatePermissionGroupRequest* /*request*/, ::proto::CreatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreatePermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::CreatePermissionGroupRequest,::proto::CreatePermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeletePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeletePermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::DeletePermissionGroupRequest, ::proto::DeletePermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::DeletePermissionGroupRequest, ::proto::DeletePermissionGroupResponse>* streamer) {
                       return this->StreamedDeletePermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeletePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeletePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::DeletePermissionGroupRequest* /*request*/, ::proto::DeletePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeletePermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::DeletePermissionGroupRequest,::proto::DeletePermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdatePermissionGroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdatePermissionGroup() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdatePermissionGroupRequest, ::proto::UpdatePermissionGroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdatePermissionGroupRequest, ::proto::UpdatePermissionGroupResponse>* streamer) {
                       return this->StreamedUpdatePermissionGroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdatePermissionGroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdatePermissionGroup(::grpc::ServerContext* /*context*/, const ::proto::UpdatePermissionGroupRequest* /*request*/, ::proto::UpdatePermissionGroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdatePermissionGroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdatePermissionGroupRequest,::proto::UpdatePermissionGroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProjectSwcNamesByProjectUuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetProjectSwcNamesByProjectUuid() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::GetProjectSwcNamesByProjectUuidRequest, ::proto::GetProjectSwcNamesByProjectUuidResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::GetProjectSwcNamesByProjectUuidRequest, ::proto::GetProjectSwcNamesByProjectUuidResponse>* streamer) {
                       return this->StreamedGetProjectSwcNamesByProjectUuid(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetProjectSwcNamesByProjectUuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProjectSwcNamesByProjectUuid(::grpc::ServerContext* /*context*/, const ::proto::GetProjectSwcNamesByProjectUuidRequest* /*request*/, ::proto::GetProjectSwcNamesByProjectUuidResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProjectSwcNamesByProjectUuid(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::GetProjectSwcNamesByProjectUuidRequest,::proto::GetProjectSwcNamesByProjectUuidResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSwcNParentInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSwcNParentInfo() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::UpdateSwcNParentInfoRequest, ::proto::UpdateSwcNParentInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::UpdateSwcNParentInfoRequest, ::proto::UpdateSwcNParentInfoResponse>* streamer) {
                       return this->StreamedUpdateSwcNParentInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSwcNParentInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSwcNParentInfo(::grpc::ServerContext* /*context*/, const ::proto::UpdateSwcNParentInfoRequest* /*request*/, ::proto::UpdateSwcNParentInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSwcNParentInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UpdateSwcNParentInfoRequest,::proto::UpdateSwcNParentInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearAllNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearAllNodes() {
      ::grpc::Service::MarkMethodStreamed(58,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::ClearAllNodesRequest, ::proto::ClearAllNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::ClearAllNodesRequest, ::proto::ClearAllNodesResponse>* streamer) {
                       return this->StreamedClearAllNodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearAllNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearAllNodes(::grpc::ServerContext* /*context*/, const ::proto::ClearAllNodesRequest* /*request*/, ::proto::ClearAllNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearAllNodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ClearAllNodesRequest,::proto::ClearAllNodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OverwriteSwcNodeData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OverwriteSwcNodeData() {
      ::grpc::Service::MarkMethodStreamed(59,
        new ::grpc::internal::StreamedUnaryHandler<
          ::proto::OverwriteSwcNodeDataRequest, ::proto::OverwriteSwcNodeDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::proto::OverwriteSwcNodeDataRequest, ::proto::OverwriteSwcNodeDataResponse>* streamer) {
                       return this->StreamedOverwriteSwcNodeData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OverwriteSwcNodeData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OverwriteSwcNodeData(::grpc::ServerContext* /*context*/, const ::proto::OverwriteSwcNodeDataRequest* /*request*/, ::proto::OverwriteSwcNodeDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOverwriteSwcNodeData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::OverwriteSwcNodeDataRequest,::proto::OverwriteSwcNodeDataResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_GetUserByUuid<WithStreamedUnaryMethod_GetUserByName<WithStreamedUnaryMethod_GetAllUser<WithStreamedUnaryMethod_UserLogin<WithStreamedUnaryMethod_UserLogout<WithStreamedUnaryMethod_UserOnlineHeartBeatNotifications<WithStreamedUnaryMethod_GetUserPermissionGroup<WithStreamedUnaryMethod_GetPermissionGroupByUuid<WithStreamedUnaryMethod_GetPermissionGroupByName<WithStreamedUnaryMethod_GetAllPermissionGroup<WithStreamedUnaryMethod_ChangeUserPermissionGroup<WithStreamedUnaryMethod_CreateProject<WithStreamedUnaryMethod_DeleteProject<WithStreamedUnaryMethod_UpdateProject<WithStreamedUnaryMethod_GetProject<WithStreamedUnaryMethod_GetAllProject<WithStreamedUnaryMethod_CreateSwc<WithStreamedUnaryMethod_DeleteSwc<WithStreamedUnaryMethod_UpdateSwc<WithStreamedUnaryMethod_GetSwcMetaInfo<WithStreamedUnaryMethod_GetAllSwcMetaInfo<WithStreamedUnaryMethod_CreateSwcSnapshot<WithStreamedUnaryMethod_GetAllSnapshotMetaInfo<WithStreamedUnaryMethod_GetSnapshot<WithStreamedUnaryMethod_GetAllIncrementOperationMetaInfo<WithStreamedUnaryMethod_GetIncrementOperation<WithStreamedUnaryMethod_CreateSwcNodeData<WithStreamedUnaryMethod_DeleteSwcNodeData<WithStreamedUnaryMethod_UpdateSwcNodeData<WithStreamedUnaryMethod_GetSwcNodeData<WithStreamedUnaryMethod_GetSwcFullNodeData<WithStreamedUnaryMethod_GetSwcNodeDataListByTimeAndUser<WithStreamedUnaryMethod_CreateDailyStatistics<WithStreamedUnaryMethod_DeleteDailyStatistics<WithStreamedUnaryMethod_UpdateDailyStatistics<WithStreamedUnaryMethod_GetDailyStatistics<WithStreamedUnaryMethod_GetAllDailyStatistics<WithStreamedUnaryMethod_CreateSwcAttachmentAno<WithStreamedUnaryMethod_DeleteSwcAttachmentAno<WithStreamedUnaryMethod_UpdateSwcAttachmentAno<WithStreamedUnaryMethod_GetSwcAttachmentAno<WithStreamedUnaryMethod_CreateSwcAttachmentApo<WithStreamedUnaryMethod_DeleteSwcAttachmentApo<WithStreamedUnaryMethod_UpdateSwcAttachmentApo<WithStreamedUnaryMethod_GetSwcAttachmentApo<WithStreamedUnaryMethod_RevertSwcVersion<WithStreamedUnaryMethod_CreateSwcAttachmentSwc<WithStreamedUnaryMethod_DeleteSwcAttachmentSwc<WithStreamedUnaryMethod_UpdateSwcAttachmentSwc<WithStreamedUnaryMethod_GetSwcAttachmentSwc<WithStreamedUnaryMethod_CreatePermissionGroup<WithStreamedUnaryMethod_DeletePermissionGroup<WithStreamedUnaryMethod_UpdatePermissionGroup<WithStreamedUnaryMethod_GetProjectSwcNamesByProjectUuid<WithStreamedUnaryMethod_UpdateSwcNParentInfo<WithStreamedUnaryMethod_ClearAllNodes<WithStreamedUnaryMethod_OverwriteSwcNodeData<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_GetUserByUuid<WithStreamedUnaryMethod_GetUserByName<WithStreamedUnaryMethod_GetAllUser<WithStreamedUnaryMethod_UserLogin<WithStreamedUnaryMethod_UserLogout<WithStreamedUnaryMethod_UserOnlineHeartBeatNotifications<WithStreamedUnaryMethod_GetUserPermissionGroup<WithStreamedUnaryMethod_GetPermissionGroupByUuid<WithStreamedUnaryMethod_GetPermissionGroupByName<WithStreamedUnaryMethod_GetAllPermissionGroup<WithStreamedUnaryMethod_ChangeUserPermissionGroup<WithStreamedUnaryMethod_CreateProject<WithStreamedUnaryMethod_DeleteProject<WithStreamedUnaryMethod_UpdateProject<WithStreamedUnaryMethod_GetProject<WithStreamedUnaryMethod_GetAllProject<WithStreamedUnaryMethod_CreateSwc<WithStreamedUnaryMethod_DeleteSwc<WithStreamedUnaryMethod_UpdateSwc<WithStreamedUnaryMethod_GetSwcMetaInfo<WithStreamedUnaryMethod_GetAllSwcMetaInfo<WithStreamedUnaryMethod_CreateSwcSnapshot<WithStreamedUnaryMethod_GetAllSnapshotMetaInfo<WithStreamedUnaryMethod_GetSnapshot<WithStreamedUnaryMethod_GetAllIncrementOperationMetaInfo<WithStreamedUnaryMethod_GetIncrementOperation<WithStreamedUnaryMethod_CreateSwcNodeData<WithStreamedUnaryMethod_DeleteSwcNodeData<WithStreamedUnaryMethod_UpdateSwcNodeData<WithStreamedUnaryMethod_GetSwcNodeData<WithStreamedUnaryMethod_GetSwcFullNodeData<WithStreamedUnaryMethod_GetSwcNodeDataListByTimeAndUser<WithStreamedUnaryMethod_CreateDailyStatistics<WithStreamedUnaryMethod_DeleteDailyStatistics<WithStreamedUnaryMethod_UpdateDailyStatistics<WithStreamedUnaryMethod_GetDailyStatistics<WithStreamedUnaryMethod_GetAllDailyStatistics<WithStreamedUnaryMethod_CreateSwcAttachmentAno<WithStreamedUnaryMethod_DeleteSwcAttachmentAno<WithStreamedUnaryMethod_UpdateSwcAttachmentAno<WithStreamedUnaryMethod_GetSwcAttachmentAno<WithStreamedUnaryMethod_CreateSwcAttachmentApo<WithStreamedUnaryMethod_DeleteSwcAttachmentApo<WithStreamedUnaryMethod_UpdateSwcAttachmentApo<WithStreamedUnaryMethod_GetSwcAttachmentApo<WithStreamedUnaryMethod_RevertSwcVersion<WithStreamedUnaryMethod_CreateSwcAttachmentSwc<WithStreamedUnaryMethod_DeleteSwcAttachmentSwc<WithStreamedUnaryMethod_UpdateSwcAttachmentSwc<WithStreamedUnaryMethod_GetSwcAttachmentSwc<WithStreamedUnaryMethod_CreatePermissionGroup<WithStreamedUnaryMethod_DeletePermissionGroup<WithStreamedUnaryMethod_UpdatePermissionGroup<WithStreamedUnaryMethod_GetProjectSwcNamesByProjectUuid<WithStreamedUnaryMethod_UpdateSwcNParentInfo<WithStreamedUnaryMethod_ClearAllNodes<WithStreamedUnaryMethod_OverwriteSwcNodeData<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace proto


#endif  // GRPC_Service_2fService_2eproto__INCLUDED
